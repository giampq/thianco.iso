{"version":3,"sources":["meteor://💻app/lib/collections/branchs.js","meteor://💻app/lib/collections/categorys.js","meteor://💻app/lib/collections/client.document.in.queues.js","meteor://💻app/lib/collections/document.attachment.js","meteor://💻app/lib/collections/document.remind.js","meteor://💻app/lib/collections/documents.in.remind.js","meteor://💻app/lib/collections/documents.js","meteor://💻app/lib/collections/favorites.js","meteor://💻app/lib/collections/hashtags.js","meteor://💻app/lib/collections/iddoc.in.fav.js","meteor://💻app/lib/collections/items.js","meteor://💻app/lib/collections/queue.js","meteor://💻app/lib/collections/reminds.js","meteor://💻app/lib/collections/rssearchs.js","meteor://💻app/lib/collections/terms.js","meteor://💻app/lib/collections/uploads.js","meteor://💻app/lib/config/config.js","meteor://💻app/lib/search-api/api-find-document.js","meteor://💻app/lib/constants.js","meteor://💻app/lib/router.js","meteor://💻app/server/compress-and-download/compress.and.download.js","meteor://💻app/server/config-upload-server/init.js","meteor://💻app/server/database-observe/document.js","meteor://💻app/server/database-observe/uploads.js","meteor://💻app/server/init-user/init.js","meteor://💻app/server/publications/branchs.js","meteor://💻app/server/publications/categorys.js","meteor://💻app/server/publications/document-attachment.js","meteor://💻app/server/publications/documentremind.js","meteor://💻app/server/publications/documents.in.remind.js","meteor://💻app/server/publications/documents.js","meteor://💻app/server/publications/favorites.js","meteor://💻app/server/publications/hashtags.js","meteor://💻app/server/publications/iddoc.in.fav.js","meteor://💻app/server/publications/items.js","meteor://💻app/server/publications/queues.js","meteor://💻app/server/publications/reminds.js","meteor://💻app/server/publications/rssearchs.js","meteor://💻app/server/publications/terms.js","meteor://💻app/server/publications/uploads.js","meteor://💻app/server/remind-service/remind.js","meteor://💻app/server/main.js","meteor://💻app/imports/configs.js","meteor://💻app/imports/optimize-rs-search.js","meteor://💻app/imports/optimize-when-startup.js","meteor://💻app/imports/server-remind-func.js","meteor://💻app/imports/string-helpers.js"],"names":["Meteor","module","watch","require","v","Branchs","Mongo","Collection","isServer","methods","addNewBranch","data","check","userId","String","id_record","Match","Maybe","name","active","Boolean","user","branch","_","extend","id_owner","_id","date_create","Date","getTime","insert","updateBranch","date_update","update","$set","removeBranch","ids","Documents","findOne","$elemMatch","find","count","remove","Categorys","addNewCategory","category","updateCategory","removeCategory","document","DocumentInQueues","Attachments","addNewAttachment","DocumentRemind","DocumentsInRemind","Configs","StrFunc","addNewDocument","console","log","Optional","OneOf","undefined","Array","hashtags","document_number","term","note","startStamp","Number","dueStamp","page_uuid","every","unit","firstAttachment","name_search","strWithoutSpec","document_number_search","idDocument","folderUpload","process","env","PWD","base","mkdirp","Fiber","fs","err","folderUploadReplace","Uploads","fetch","map","el","idx","pathFileUpload","path","newPathFile","new_name","copy","then","attachment","oldImageId","pathReactive","call","catch","error","run","updateDocument","idDoc","setDefaultDocumentWithIdDoc","pageUUID","doc","isDefault","multi","setDefaultDocumentPageUUID","uuid_page","deleteDocument","deleteFolderRecursive","e","existsSync","readdirSync","forEach","file","index","curPath","lstatSync","isDirectory","unlinkSync","rmdirSync","addQuickDocument","key_unique","p","Promise","rs","rj","observeChanges","changed","documentInRS","RsSearchs","firstDocFullPath","getFirstAttachmentOfDocument","removed","_idPost","Favorites","addNewFavorite","favorite","updateFavorite","removeFavorite","Hashtags","addNewHashtag","hashtag","updateHashtag","removeHashtag","IdDocumentInFavorite","addIdDocToFav","idFav","fav","dataGet","$and","$eq","idDocInFav","success","message","mergeFavToQueue","countAdd","val","inQueue","Queues","id_doc","queue","clearFav","removeDocInFav","Items","Reminds","addNewRemind","interval","remind","updateRemind","removeRemind","Terms","addNewTerm","updateTerm","removeTerm","allow","fields","modifier","Accounts","config","forbidClientAccountCreation","StrHelpers","RsSearchOpt","filter","branchs","categorys","terms","uuid_page_search","nameRegex","nameWithoutSpec","buildRegExp","dcNumbRegex","docnumWithoutSpec","queryFilter","length","$in","testResult","sort","fucOptimizeRsSearch","docInfo","getFirstAttachmentOfDocumentToCompress","realName","fullPath","absoluteUrl","defaultOptions","rootUrl","WEB_KEY","MM_KEY","days","weeks","months","quarters","years","GUEST_QUEUE","requireLogin","loggingIn","render","loadingTemplate","next","Router","configure","layoutTemplate","notFoundTemplate","waitOn","subscribe","route","onBeforeAction","params","_idFav","_uuid","uuid","action","cloneUUID","Random","id","paramUUID","trim","redirect","item","uploads","_idDoc","zip","compressAndDownload","resolve","callAPICompressQueues","er","files","arIds","split","zipName","moment","format","zipPath","zipFullPath","countFileAdded","i","firstDoc","firstDocName","toString","readFileSync","generate","base64","compression","outputFileSync","urlDownload","StringHelpers","startup","UploadServer","init","tmpDir","uploadDir","checkCreateDirectories","getDirectory","fileInfo","formData","directoryName","getFileName","prefix","finished","timestamp","valueOf","time","newname","replace","ext","pop","mimeTypes","upload","Error","delete","fulPath","ServiceRemind","added","saveRemind","email","username","password","accountWithEmail","findUserByEmail","Package","sha","SHA256","createUser","publish","allRemind","allIdinFav","userid","idxLoop","filterQuery","id_queue","sixHours","deleteOldZip","setInterval","OptimizeStartup","os","md5","hostName","hostDev","valid","hostname","deleteEmailValid","deleteOldUpload","acc","removeEmail","setUsername","export","nowTime","yesterday","clone","add","$lt","sub1DayFromNow","oldFileUpload","listNeedRemind","add1DayFromNow","add3DayFromNow","allDocumentRemindWithoutBefore","$gt","indexOf","push","allDocumentRemindWithBefore","dueDay","mmdueDay","mmBefore","arInsert","formatTime","mmNow","readdir","f","mmFormat","timeInName","mmDT","diff","removeSpecCharVi","str","removeDiacritics","defaultDiacriticsRemovalMap","letters","searchText","words","exps","word","fullExp","join","RegExp"],"mappings":"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","file":"/app.js","sourcesContent":["import {Meteor} from 'meteor/meteor'\n\nBranchs = new Mongo.Collection('branchs');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewBranch: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean\n            });\n\n            let user = Meteor.user();\n            let branch = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete branch.id_record;\n            return await Branchs.insert(branch);\n        },\n        updateBranch: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean\n            });\n            let _id = data.id_record;\n            let branch = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete branch.id_record;\n            return await  Branchs.update(_id, {\n                $set: branch,\n            });\n\n        },\n        removeBranch: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            /* check term using other document */\n            let ids = [_id];\n            let branch = await Documents.findOne({\n                branch: {\n                    $elemMatch: {\n                        \"$in\": ids\n                    }\n                }\n            });\n\n            if(branch){\n                return null;\n            }\n\n            if (Branchs.find(_id).count()) {\n                return await Branchs.remove({_id: _id});\n            } else {\n                return null;\n            }\n        }\n    });\n}\n\n\n// Branchs.find().observeChanges({\n//     added: function(id, object) {\n//     },\n//     changed: function (id, object) {\n//     },\n//     removed: function (id, object) {\n//     }\n// });\n","import {Meteor} from 'meteor/meteor'\n\nCategorys = new Mongo.Collection('categorys');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewCategory: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean\n            });\n\n            let user = Meteor.user();\n            let category = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete category.id_record;\n            return await Categorys.insert(category);\n        },\n        updateCategory: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean\n            });\n            let _id = data.id_record;\n            let category = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete category.id_record;\n            return await  Categorys.update(_id, {\n                $set: category,\n            });\n\n        },\n        removeCategory: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            //check document using category\n            let document = await Documents.findOne({category: _id});\n            if(document){\n                return null;\n            }\n            if (Categorys.find(_id).count()) {\n                return await Categorys.remove({_id: _id});\n            } else {\n                return null;\n            }\n        }\n    });\n}\n\n\n\n","DocumentInQueues = new Mongo.Collection('document-in-queues');\n","import {Meteor} from 'meteor/meteor'\n\nAttachments = new Mongo.Collection('attachments');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewAttachment: async function (document) {\n            return await Attachments.insert(document);\n        }\n    });\n}\n\n","DocumentRemind = new Mongo.Collection('document-remind');\n","DocumentsInRemind = new Mongo.Collection('documents-in-remind');\n","import {Meteor} from 'meteor/meteor'\nimport * as Configs from \"../../imports/configs\";\nDocuments = new Mongo.Collection('documents');\nlet StrFunc = require('../../imports/string-helpers');\n\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewDocument: async function (document) {\n            check(Meteor.userId(), String);\n            console.log(document);\n            check(document, {\n                branch: Match.Optional(Match.OneOf(undefined, null, Array)),\n                category: Match.Optional(Match.OneOf(undefined, null, String)),\n                hashtags: Match.Optional(Match.OneOf(undefined, null, Array)),\n                name: String,\n                document_number: Match.Optional(Match.OneOf(undefined, null, String)),\n                term: Match.Optional(Match.OneOf(undefined, null, Array)),\n                note: Match.Optional(Match.OneOf(undefined, null, String)),\n                startStamp: Match.Optional(Match.OneOf(undefined, null, Number)),\n                dueStamp: Match.Optional(Match.OneOf(undefined, null, Number)),\n                page_uuid: String,\n                every: Number,\n                unit: String,\n                firstAttachment: Match.Optional(Match.OneOf(undefined, null, String)),\n            });\n            user = Meteor.user();\n            document = _.extend(document, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n                name_search: StrFunc.strWithoutSpec(document.name),\n                document_number_search: StrFunc.strWithoutSpec(document.document_number)\n            });\n            let page_uuid = document.page_uuid;\n            // create new document without attachments\n            let idDocument = await Documents.insert(document);\n            let folderUpload = process.env.PWD + '/.uploads/';\n            let base = process.env.PWD + '/.uploads/' + idDocument;\n            var mkdirp = require('mkdirp');\n            var Fiber = require('fibers');\n            var fs = require('fs-extra')\n            mkdirp(base, function (err) {\n                if (err) {\n                    console.log(err);\n                } else {\n                    console.log('create new folder: ' + base);\n                    //move attachment from tmp to documents-folder\n                    Fiber(function () {\n                        let folderUploadReplace = '/upload/';\n                        Uploads.find({'uuid_page': page_uuid}).fetch().map((el, idx) => {\n                            let pathFileUpload = (folderUpload + el.path);\n                            let newPathFile = base + '/' + el.new_name;\n                            fs.copy(pathFileUpload, newPathFile)\n                                .then(() => {\n                                    // save new file to attachment\n                                    let attachment = el;\n                                    let oldImageId = attachment._id;\n                                    delete attachment._id;\n                                    attachment.pathReactive = idDocument + '/' + el.path;\n                                    attachment.idDocument = idDocument;\n                                    Meteor.call('addNewAttachment', attachment);\n                                    Meteor.call('deleteFile', {_id: oldImageId});\n                                }).catch(err => console.error(err))\n                        });\n                    }).run();\n                }\n                // path exists unless there was an error\n            });\n        },\n    });\n\n    Meteor.methods({\n        updateDocument: async function (document) {\n            check(Meteor.userId(), String);\n            check(document, {\n                _id: String,\n                branch: Match.Optional(Match.OneOf(undefined, null, Array)),\n                category: Match.Optional(Match.OneOf(undefined, null, String)),\n                hashtags: Match.Optional(Match.OneOf(undefined, null, Array)),\n                name: String,\n                document_number: Match.Optional(Match.OneOf(undefined, null, String)),\n                term: Match.Optional(Match.OneOf(undefined, null, Array)),\n                note: Match.Optional(Match.OneOf(undefined, null, String)),\n                startStamp: Match.Optional(Match.OneOf(undefined, null, Number)),\n                dueStamp: Match.Optional(Match.OneOf(undefined, null, Number)),\n                page_uuid: String,\n                every: Number,\n                unit: String,\n                firstAttachment: Match.Optional(Match.OneOf(undefined, null, String)),\n            });\n            user = Meteor.user();\n            document.name_search = StrFunc.strWithoutSpec(document.name);\n            document.document_number_search = StrFunc.strWithoutSpec(document.document_number);\n            document = _.extend(document, {\n                date_update: new Date().getTime(),\n            });\n            let idDoc = document._id;\n            delete document._id;\n\n            return await  Documents.update(idDoc, {\n                $set: document,\n            });\n        },\n    });\n\n\n    Meteor.methods({\n        setDefaultDocumentWithIdDoc: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                _id: String,\n                pageUUID: String,\n                idDocument: String,\n            });\n            // _id is attachment id\n            let idDoc = data.idDocument;\n            let doc = Documents.findOne(idDoc);\n            if(doc){\n                Attachments.update({idDocument: idDoc}, {\n                    $set: {\n                        isDefault: false,\n                    }\n                }, {multi: true});\n                Attachments.update(data._id, {\n                    $set: {\n                        isDefault: true,\n                    }\n                })\n            }\n        }\n    });\n\n\n    Meteor.methods({\n        setDefaultDocumentPageUUID: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                _id: String,\n                pageUUID: String,\n            });\n            Uploads.update({uuid_page: data.pageUUID}, {\n                $set: {\n                    isDefault: false,\n                }\n            }, {multi: true});\n            Uploads.update(data._id, {\n                $set: {\n                    isDefault: true,\n                }\n            })\n        }\n    })\n\n    Meteor.methods({\n        deleteDocument: function (idDoc) {\n            check(Meteor.userId(), String);\n            check(idDoc, String);\n            try{\n                var Fiber = require('fibers');\n                var fs = require('fs-extra');\n                Fiber(function () {\n                    let doc = Documents.findOne(idDoc);\n                    if(!doc){\n                        return false;\n                    }\n                    Attachments.remove({idDocument: idDoc}, {multi: true});\n                    Documents.remove(idDoc);\n                    var fs = require('fs-extra');\n                    let folderUpload = process.env.PWD + '/.uploads/' + idDoc;\n                    deleteFolderRecursive(folderUpload, fs);\n                    return true;\n                }).run();\n            }catch (e){\n                return false;\n            }\n        }\n    });\n\n    function deleteFolderRecursive(path, fs) {\n        try{\n            if (fs.existsSync(path)) {\n                fs.readdirSync(path).forEach(function (file, index) {\n                    var curPath = path + \"/\" + file;\n                    if (fs.lstatSync(curPath).isDirectory()) { // recurse\n                        deleteFolderRecursive(curPath, fs);\n                    } else { // delete file\n                        fs.unlinkSync(curPath);\n                    }\n                });\n                fs.rmdirSync(path);\n            }\n        }catch (e){}\n    };\n\n    Meteor.methods({\n        addQuickDocument: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                branch: Match.Optional(Match.OneOf(undefined, null, Array)),\n                category: Match.Optional(Match.OneOf(undefined, null, String)),\n                page_uuid: String,\n                hashtags: Match.Optional(Match.OneOf(undefined, null, Array)),\n            });\n            let user = Meteor.userId();\n            var Fiber = require('fibers');\n            Fiber(function () {\n                //get all attachment in page uuid\n                Uploads.find({'uuid_page': data.page_uuid}).fetch().map((el, idx) => {\n                    let name = el.path;\n                    let document = _.extend(data, {\n                        id_owner: user._id,\n                        date_create: new Date().getTime(),\n                        name: name,\n                        name_search: StrFunc.strWithoutSpec(name),\n                        firstAttachment: el.key_unique\n                    });\n                    let p = new Promise(function (rs, rj) {\n                        rs(Documents.insert(document));\n                    });\n\n                    p.then(idDoc => {\n                        if(idDoc){\n                            let folderUpload = process.env.PWD + '/.uploads/';\n                            let base = process.env.PWD + '/.uploads/' + idDoc;\n                            var mkdirp = require('mkdirp');\n                            var fs = require('fs-extra');\n                            mkdirp(base, function (err) {\n                                if (err) {\n                                    console.log(err);\n                                } else {\n                                    let pathFileUpload = (folderUpload + el.path);\n                                    let newPathFile = base + '/' + el.new_name;\n                                    fs.copy(pathFileUpload, newPathFile)\n                                        .then(() => {\n                                            let attachment = el;\n                                            let oldImageId = attachment._id;\n                                            delete attachment._id;\n                                            attachment.pathReactive = idDoc + '/' + el.path;\n                                            attachment.idDocument = idDoc;\n                                            attachment.isDefault = true;\n                                            Meteor.call('addNewAttachment', attachment);\n                                            Meteor.call('deleteFile', {_id: oldImageId});\n                                        }).catch(err => console.error(err))\n                                }\n                            });\n                        }\n                    });\n\n                    p.catch(e => {\n                        console.log(e);\n                    })\n                    return p;\n                });\n            }).run();\n        }\n    })\n}\n\nif(Meteor.isServer){\n\t//tracker DocumentChange\n\tDocuments.find({}).observeChanges({\n\t\tasync changed(idDoc, document) {\n\t\t    console.log('document changed');\n\t\t\tconst documentInRS = RsSearchs.findOne({\n\t\t\t\tid_record: idDoc\n\t\t\t});\n\t\t\tif (documentInRS) {\n\t\t\t\tdocumentInRS.branch = document.branch;\n\t\t\t\tdocumentInRS.category = document.category;\n\t\t\t\tdocumentInRS.hashtags = document.hashtags;\n\t\t\t\tdocumentInRS.name = document.name;\n\t\t\t\tdocumentInRS.document_number = document.document_number;\n\t\t\t\tdocumentInRS.term = document.term;\n\t\t\t\tdocumentInRS.note = document.note;\n\t\t\t\tdocumentInRS.startStamp = document.startStamp;\n\t\t\t\tdocumentInRS.dueStamp = document.dueStamp;\n\t\t\t\tdocumentInRS.page_uuid = document.page_uuid;\n\t\t\t\tdocumentInRS.every = document.every;\n\t\t\t\tdocumentInRS.unit = document.unit;\n\t\t\t\tdocumentInRS.firstAttachment = document.firstAttachment;\n\t\t\t\tdocumentInRS.name_search = document.name_search;\n\t\t\t\tdocumentInRS.document_number_search = document.document_number_search;\n\t\t\t\tdocumentInRS.firstDocFullPath = Configs.getFirstAttachmentOfDocument(idDoc);\n\t\t\t\tdelete documentInRS._id;\n\t\t\t\tawait  RsSearchs.update({id_record: idDoc}, {\n\t\t\t\t\t$set: documentInRS,\n\t\t\t\t});\n\n\t\t\t\tawait  DocumentInQueues.update({id_record: idDoc}, {\n\t\t\t\t\t$set: documentInRS,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tremoved(_idPost) {\n\t\t},\n\t});\n}\n\n","Favorites = new Mongo.Collection('favorites');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewFavorite: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean,\n            });\n\n            let user = Meteor.user();\n            let favorite = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete favorite.id_record;\n            return await Favorites.insert(favorite);\n        },\n        updateFavorite: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean,\n            });\n            let _id = data.id_record;\n            let favorite = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete favorite.id_record;\n            return await  Favorites.update(_id, {\n                $set: favorite,\n            });\n\n        },\n        removeFavorite: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            return await Favorites.remove({_id: _id});\n        }\n    });\n}\n","import {Meteor} from 'meteor/meteor'\n\nHashtags = new Mongo.Collection('hashtags');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewHashtag: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean\n            });\n\n            let user = Meteor.user();\n            let hashtag = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete hashtag.id_record;\n            return await Hashtags.insert(hashtag);\n        },\n        updateHashtag: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean\n            });\n            let _id = data.id_record;\n            let hashtag = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete hashtag.id_record;\n            return await  Hashtags.update(_id, {\n                $set: hashtag,\n            });\n\n        },\n        removeHashtag: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            /* check term using other document */\n            let ids = [_id];\n            let hashtag = await Documents.findOne({\n                hashtag: {\n                    $elemMatch: {\n                        \"$in\": ids\n                    }\n                }\n            });\n\n            if(hashtag){\n                return null;\n            }\n\n            if (Hashtags.find(_id).count()) {\n                return await Hashtags.remove({_id: _id});\n            } else {\n                return null;\n            }\n        }\n    });\n}\n","IdDocumentInFavorite = new Mongo.Collection('id-doc-in-fav');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addIdDocToFav: function (data) {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            check(data, {\n                idDoc: String,\n                idFav: String,\n            });\n\n            let fav = Favorites.findOne(data.idFav);\n            let doc = Documents.findOne(data.idDoc);\n            if (fav && doc) {\n                let dataGet = IdDocumentInFavorite.findOne({\n                    $and: [\n                        {\n                            idDoc: {$eq: data.idDoc}\n                        },\n                        {\n                            idFav: {$eq: data.idFav}\n                        }\n                    ]\n                });\n\n                if (!dataGet) {\n                    let user = Meteor.user();\n                    let idDocInFav = _.extend(data, {\n                        id_owner: user._id,\n                        date_create: new Date().getTime(),\n                    });\n                    IdDocumentInFavorite.insert(idDocInFav);\n                    return {\n                        success: true,\n                        message: 'add \"' + doc.name + '\" to favorite \"' + fav.name + '\" success'\n                    }\n                } else {\n                    return {\n                        success: false,\n                        message: '\"' + doc.name + '\"' + '  already exists in \"' + fav.name + '\"',\n                    }\n                }\n            } else {\n                return {\n                    success: false,\n                    message: \"Data invalid\",\n                }\n            }\n        }\n    });\n\n\n    Meteor.methods({\n        mergeFavToQueue: function (idFav) {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            check(idFav, String);\n            let fav = Favorites.findOne(idFav);\n            if (fav) {\n                let idDocInFav = IdDocumentInFavorite.find({\n                    id_owner: Meteor.userId(),\n                    idFav: idFav\n                });\n                if (idDocInFav.count()) {\n                    let countAdd = 0;\n                    idDocInFav.fetch().map((val, idx) => {\n                        let inQueue = Queues.findOne({\n                            id_doc: val.idDoc,\n                            id_owner: Meteor.userId()\n                        });\n                        if (!inQueue) {\n                            let queue = {\n                                id_owner: Meteor.userId(),\n                                id_doc: val.idDoc,\n                                date_create: new Date().getTime(),\n                            }\n                            Queues.insert(queue);\n                            countAdd++;\n                        }\n                    });\n                    if (countAdd) {\n                        return {\n                            success: true,\n                            message: \"add \" + countAdd + \" document(s) to queue\"\n                        };\n                    } else {\n                        return {\n                            success: false,\n                            message: \"all documents in favorite already exists in queue\"\n                        };\n                    }\n                } else {\n                    return {\n                        success: false,\n                        message: \"documents in favorite is empty\"\n                    };\n                }\n            } else {\n                return {\n                    success: false,\n                    message: \"favorite is empty\"\n                };\n            }\n\n        }\n    });\n\n    Meteor.methods({\n        clearFav: function (idFav) {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            check(idFav, String);\n            let fav = Favorites.findOne(idFav);\n            if (fav) {\n                IdDocumentInFavorite.remove({\n                    id_owner: Meteor.userId(),\n                    idFav: idFav\n                });\n            }\n        }\n    });\n\n    Meteor.methods({\n        removeDocInFav: function (data) {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            check(data.idFav, String);\n            check(data.idDoc, String);\n            IdDocumentInFavorite.remove({\n                id_owner: Meteor.userId(),\n                idFav: data.idFav,\n                idDoc: data.idDoc,\n            });\n        }\n    });\n}\n","Items = new Mongo.Collection('items');\n","Queues = new Mongo.Collection('queues');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        'addQueue': async function (idDoc) {\n            check(Meteor.userId(), String);\n            check(idDoc, String);\n            let user = Meteor.user();\n            if (Documents.findOne(idDoc) && !Queues.findOne({id_doc: idDoc, id_owner: user._id})) {\n                return await Queues.insert({\n                    id_owner: user._id,\n                    id_doc: idDoc,\n                    date_create: new Date().getTime(),\n                });\n            }\n        },\n        'removeQueue': async function (idDoc) {\n            check(Meteor.userId(), String);\n            check(idDoc, String);\n            let user = Meteor.user();\n            let queue = Queues.findOne({id_doc: idDoc, id_owner: user._id});\n            if (queue) {\n                Queues.remove(queue._id);\n            }\n        },\n        \"cleanQueue\": function () {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            Queues.remove({id_owner: Meteor.userId()});\n        }\n    });\n}\n","Reminds = new Mongo.Collection('reminds');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewRemind: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean,\n                interval: Number,\n            });\n\n            let user = Meteor.user();\n            let remind = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete remind.id_record;\n            return await Reminds.insert(remind);\n        },\n        updateRemind: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean,\n                interval: Number,\n            });\n            let _id = data.id_record;\n            let remind = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete remind.id_record;\n            return await  Reminds.update(_id, {\n                $set: remind,\n            });\n\n        },\n        removeRemind: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            if (Reminds.find(_id).count()) {\n                return await Reminds.remove({_id: _id});\n            } else {\n                return null;\n            }\n        }\n    });\n\n}\n\n\n","RsSearchs = new Mongo.Collection('rssearchs');\n","Terms = new Mongo.Collection('terms');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewTerm: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean,\n            });\n\n            let user = Meteor.user();\n            let term = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete term.id_record;\n            return await Terms.insert(term);\n        },\n        updateTerm: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean,\n            });\n            let _id = data.id_record;\n            let term = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete term.id_record;\n            return await  Terms.update(_id, {\n                $set: term,\n            });\n\n        },\n        removeTerm: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            if (Terms.find(_id).count()) {\n                /* check term using other document */\n                let ids = [_id];\n                let document = await Documents.findOne({\n                    term: {\n                        $elemMatch: {\n                            \"$in\": ids\n                        }\n                    }\n                });\n\n                if (!document) {\n                    return await Terms.remove({_id: _id});\n                }\n            }\n            return null;\n        }\n    });\n}\n\n\n\n","Uploads = new Mongo.Collection('uploads');\n\nUploads.allow({\n    insert: function (userId, doc) {\n        return !!userId;\n    },\n    update: function (userId, doc, fields, modifier) {\n        return !!userId;\n    }\n});\n","Accounts.config({\n    forbidClientAccountCreation: true\n});\n","import {Meteor} from 'meteor/meteor'\nimport * as StrHelpers from '../../imports/string-helpers'\nimport * as Configs from '../../imports/configs'\nimport * as RsSearchOpt from '../../imports/optimize-rs-search'\n\nMeteor.methods({\n    'findDocuments': async function (filter) {\n        try {\n            check(Meteor.userId(), String);\n            check(filter, {\n                branchs: Match.Optional(Match.OneOf(undefined, null, Array)),\n                categorys: Match.Optional(Match.OneOf(undefined, null, Array)),\n                name: Match.Optional(Match.OneOf(undefined, null, String)),\n                document_number: Match.Optional(Match.OneOf(undefined, null, String)),\n                terms: Match.Optional(Match.OneOf(undefined, null, Array)),\n                uuid_page_search: String,\n                hashtags: Match.Optional(Match.OneOf(undefined, null, Array)),\n            });\n            user = Meteor.user();\n            let branchs = filter.branchs;\n            let terms = filter.terms;\n            let categorys = filter.categorys;\n            let hashtags = filter.hashtags;\n            let nameRegex = '';\n            if (filter.name) {\n                let nameWithoutSpec = StrHelpers.strWithoutSpec(filter.name);\n                nameRegex = StrHelpers.buildRegExp(nameWithoutSpec);\n            }\n            let dcNumbRegex = '';\n            if (filter.document_number) {\n                let docnumWithoutSpec = StrHelpers.strWithoutSpec(filter.document_number);\n                dcNumbRegex = StrHelpers.buildRegExp(docnumWithoutSpec);\n            }\n            let queryFilter = {};\n            if (branchs && branchs.length) {\n                queryFilter.branch = {\n                    $elemMatch: {\n                        \"$in\": branchs\n                    }\n                }\n            }\n\n            if (categorys && categorys.length) {\n                queryFilter.category = {\n                    $in: categorys\n                }\n            }\n\n            if (terms && terms.length) {\n                queryFilter.term = {\n                    $elemMatch: {\n                        \"$in\": terms\n                    }\n                }\n            }\n\n            if (hashtags && hashtags.length) {\n                queryFilter.hashtags = {\n                    $elemMatch: {\n                        \"$in\": hashtags\n                    }\n                }\n            }\n\n            if (nameRegex) {\n                queryFilter.name_search = nameRegex;\n            }\n\n            if (dcNumbRegex) {\n                queryFilter.document_number_search = dcNumbRegex;\n            }\n            let testResult = await Documents.find({\n                $and: [queryFilter]\n            }, {sort: {name: 1}});\n\n            //save search\n            if (Meteor.isServer) {\n                RsSearchs.remove({uuid_page_search: filter.uuid_page_search});\n                RsSearchOpt.fucOptimizeRsSearch();\n            }\n\n            return await testResult.fetch().map((val, idx) => {\n                val.id_record = val._id;\n                delete val._id;\n                val.uuid_page_search = filter.uuid_page_search;\n                if (Meteor.isServer) {\n                    let docInfo = Configs.getFirstAttachmentOfDocumentToCompress(val.id_record);\n                    val.firstDocFullPath = Configs.getFirstAttachmentOfDocument(val.id_record);\n                    val.realName = docInfo.name;\n                    RsSearchs.insert(val);\n                }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n});\n\n\nfunction getFirstAttachmentOfDocument(idDocument) {\n    let attachment = Attachments.findOne({idDocument: idDocument});\n    if (!attachment) {\n        return '';\n    } else {\n        let fullPath = Meteor.absoluteUrl.defaultOptions.rootUrl + 'upload/' + attachment.pathReactive;\n        return fullPath;\n    }\n}\n","WEB_KEY = 'PQG-2212';\n\nMM_KEY = {\n    days: 'd',\n    weeks: 'w',\n    months: 'M',\n    quarters: \"Q\",\n    years: 'y',\n};\n\nGUEST_QUEUE = 'ngocns@thianco.com.vn';\n","var requireLogin = function () {\n    if (!Meteor.user()) {\n        if (Meteor.loggingIn()) {\n            this.render(this.loadingTemplate);\n        } else {\n            this.render('deny');\n        }\n    } else {\n        this.next();\n    }\n}\n\nRouter.configure({\n    layoutTemplate: 'layout',\n    loadingTemplate: 'loading',\n    notFoundTemplate: 'notfound',\n    waitOn: function () {\n        return [\n            Meteor.subscribe('queues'),\n            Meteor.subscribe('documents.in.queue'),\n            Meteor.subscribe('categorys'),\n            Meteor.subscribe('branchs'),\n            Meteor.subscribe('terms'),\n            Meteor.subscribe('documentremind'),\n            Meteor.subscribe('documentsinremind'),\n            Meteor.subscribe('favorites'),\n            Meteor.subscribe('document.in.favorite'),\n            Meteor.subscribe('hashtags'),\n        ]\n    }\n});\n\nRouter.route('/', {\n    name: 'dashboard',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/categorys', {\n    name: 'categorys',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/branchs', {\n    name: 'branchs',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/terms', {\n    name: 'terms',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/favorites', {\n    name: 'favorites',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/reminds', {\n    name: 'reminds',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('reminds')\n        ]\n    }\n});\n\nRouter.route('/hashtags', {\n    name: 'hashtags',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/all-favs', {\n    name: 'allfavs',\n    onBeforeAction: requireLogin,\n});\n\n\nRouter.route('/queues', {\n    name: 'printqueues',\n    onBeforeAction: requireLogin,\n});\n\n\nRouter.route('/docremind', {\n    name: 'documentremind',\n    onBeforeAction: requireLogin,\n});\n\n\nRouter.route('/comming-soon', {\n    name: 'commingsoon',\n    onBeforeAction: requireLogin,\n});\n\n\nRouter.route('/edit-fav/:_idFav', {\n    name: 'editfav',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('documents.in.fav', this.params._idFav),\n        ]\n    },\n    data: function () {\n        return {\n            idFav: this.params._idFav,\n        }\n    },\n});\n\n\nRouter.route('/all-documents/:_uuid', {\n    name: 'alldocuments',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('rssearchs', this.params._uuid),\n        ]\n    },\n    data: function () {\n        return {\n            uuid: this.params._uuid,\n        }\n    },\n    action: function () {\n        let cloneUUID = Random.id();\n        let paramUUID = this.params._uuid;\n        if (!paramUUID || paramUUID.trim().length != cloneUUID.length) {\n            this.redirect('/all-documents/' + cloneUUID);\n        } else {\n            this.render();\n        }\n\n    }\n});\n\nRouter.route('/add-documents/:_uuid', {\n    name: 'adddocuments',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('items', this.params._uuid),\n            Meteor.subscribe('uploads', this.params._uuid),\n        ]\n    },\n    data: function () {\n        return {\n            item: Items.findOne(),\n            uploads: Uploads.find(),\n            uuid: this.params._uuid,\n        }\n    },\n    action: function () {\n        let cloneUUID = Random.id();\n        let paramUUID = this.params._uuid;\n        if (!paramUUID || paramUUID.trim().length != cloneUUID.length) {\n            this.redirect('/add-documents/' + cloneUUID);\n        } else {\n            this.render();\n        }\n\n    }\n});\n\nRouter.route('/quick-add-documents/:_uuid', {\n    name: 'quickadddoc',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('items', this.params._uuid),\n            Meteor.subscribe('uploads', this.params._uuid),\n        ]\n    },\n    data: function () {\n        return {\n            item: Items.findOne(),\n            uploads: Uploads.find(),\n            uuid: this.params._uuid,\n        }\n    },\n    action: function () {\n        let cloneUUID = Random.id();\n        let paramUUID = this.params._uuid;\n        if (!paramUUID || paramUUID.trim().length != cloneUUID.length) {\n            this.redirect('/quick-add-documents/' + cloneUUID);\n        } else {\n            this.render();\n        }\n\n    }\n});\n\n\n\nRouter.route('/edit-document/:_idDoc/:_uuid', {\n    name: 'editdoc',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('items', this.params._uuid),\n            Meteor.subscribe('uploads', this.params._uuid),\n            Meteor.subscribe('document', this.params._idDoc),\n            Meteor.subscribe('attachment', this.params._idDoc),\n        ]\n    },\n    data: function () {\n        return {\n            item: Items.find(),\n            uploads: Attachments.find({idDocument: this.params._idDoc}),\n            uuid: this.params._uuid,\n            idDoc: this.params._idDoc,\n            doc: Documents.findOne(this.params._idDoc)\n        }\n    },\n    action: function () {\n        let idDoc = this.params._idDoc;\n        let cloneUUID = Random.id();\n        let paramUUID = this.params._uuid;\n        if (!paramUUID || paramUUID.trim().length != cloneUUID.length) {\n            this.redirect('/edit-document/' + idDoc + '/' + cloneUUID);\n        } else {\n            this.render();\n        }\n\n    }\n});\n","import {Meteor} from 'meteor/meteor';\nimport * as Configs from '../../imports/configs'\n\nconst fs = require('fs-extra');\nvar path = require('path');\nvar Fiber = require('fibers');\nvar zip = require('node-zip')();\n\n\nMeteor.methods({\n    compressAndDownload: function (ids) {\n        check(Meteor.userId(), String);\n        check(ids, String);\n        return new Promise(\n            function (resolve) {\n                resolve(callAPICompressQueues(ids));\n            }\n        ).catch(function (er) {\n            console.log(er);\n            return null;\n        });\n    }\n});\n\nfunction callAPICompressQueues(ids) {\n    zip.files = {};\n    let userId = Meteor.userId();\n    userId = userId ? userId : Random.id();\n    let arIds = ids.split(\",\");\n    if (arIds && arIds.length) {\n        let zipName = moment().format('DD_MM_YYYY_HH_mm_ss');\n        zipName += '.' + userId + '.zip';\n        let zipPath = process.env.PWD + '/.uploads/zip/';\n        let zipFullPath = zipPath + zipName;\n        let countFileAdded = 1;\n        for (let i in arIds) {\n            let id = arIds[i];\n            let document = Documents.findOne(id);\n            if (!document) {\n                continue;\n            } else {\n                let firstDoc = Configs.getFirstAttachmentOfDocumentToCompress(id);\n                let firstDocName = countFileAdded.toString() + '_' + firstDoc.name;\n                let firstDocFullPath = firstDoc.fullPath;\n                if (firstDoc) {\n                    zip.file(firstDocName, fs.readFileSync(firstDocFullPath));\n                    countFileAdded++;\n                }\n            }\n        }\n        if (countFileAdded > 1) {\n            var data = zip.generate({base64: false, compression: 'DEFLATE'});\n            fs.outputFileSync(zipFullPath, data, 'binary');\n            let urlDownload = Meteor.absoluteUrl.defaultOptions.rootUrl + 'upload/zip/' + zipName;\n            return urlDownload;\n        } else {\n            return null;\n        }\n    } else {\n        return null;\n    }\n}\n\n","import * as StringHelpers from  '../../imports/string-helpers'\n\nMeteor.startup(function () {\n    UploadServer.init({\n        tmpDir: process.env.PWD + '/.uploads/tmp',\n        uploadDir: process.env.PWD + '/.uploads/',\n        checkCreateDirectories: true,\n        getDirectory: function (fileInfo, formData) {\n            if (formData && formData.directoryName != null) {\n                return formData.directoryName;\n            }\n            return \"\";\n        },\n        getFileName: function (fileInfo, formData) {\n            if (formData && formData.prefix != null) {\n                return formData.prefix + '_' + fileInfo.name;\n            }\n            return fileInfo.name;\n        },\n        finished: function (fileInfo, formData) {\n            fileInfo.uuid = Random.id();\n            fileInfo.key_unique = fileInfo.uuid + '@' + new Date().getTime();\n            fileInfo.timestamp = moment().valueOf();\n            if (formData && formData.id_owner != null && formData.uuid != null) {\n                fileInfo.id_owner = formData.id_owner;\n                fileInfo.uuid_page = formData.uuid;\n                /*update file to folder document*/\n                if(formData && formData.idDoc){\n                    fileInfo.idDoc =  formData.idDoc;\n                }\n                let time = moment().format('YYYY_MM_DD_HH_mm_ss.');\n                let newname = StringHelpers.strWithoutSpec(fileInfo.path).replace(/  /g, ' ').replace(/ /g, '_');\n                fileInfo.new_name = time + newname;\n            }\n            fileInfo.ext = fileInfo.name ? fileInfo.name.split('.').pop() : \"\";\n            fileInfo.date_create = new Date().getTime();\n        }, mimeTypes: {\n            \"jpeg\": \"image/jpeg\",\n            \"jpg\": \"image/jpeg\",\n            \"png\": \"image/png\",\n            \"gif\": \"image/gif\",\n            \"pdf\": \"application/pdf\",\n            \"doc\": \"application/msword\",\n            \"docx\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n            \"zip\": \"application/zip, application/x-compressed-zip\",\n            \"txt\": \"text/plain\"\n        }\n\n    });\n});\n\nMeteor.methods({\n    'deleteFile': function (data) {\n        check(data, {\n            _id: String,\n            idDocument: Match.Optional(Match.OneOf(undefined, null, String)),\n        });\n        let _id = data._id;\n        let idDocument = data.idDocument;\n\n        if (!idDocument) {\n            var upload = Uploads.findOne(_id);\n            if (upload == null) {\n                throw new Meteor.Error(404, 'Upload not found'); // maybe some other code\n            }\n            try{\n                UploadServer.delete(upload.path);\n            }catch (e){}\n\n            try{\n                UploadServer.delete(upload.new_name);\n            }catch (e){}\n            Uploads.remove(_id);\n        } else {\n            var Fiber = require('fibers');\n            var fs = require('fs-extra');\n            Fiber(function () {\n                let attachment = Attachments.findOne(_id)\n                if (attachment) {\n                    let base = process.env.PWD + '/.uploads/' + idDocument;\n                    let fulPath = base + '/' + attachment.new_name;\n                    try {\n                        fs.unlinkSync(fulPath);\n                        Attachments.remove({_id: _id});\n                    } catch (e) {\n                        console.log(e)\n                    }\n                }\n            }).run();\n        }\n    }\n})\n","import * as ServiceRemind from '../../imports/server-remind-func'\n\nDocuments.find({}).observeChanges({\n    added: function (id, fields) {\n        ServiceRemind.saveRemind();\n    },\n    changed: function (id, fields) {\n        ServiceRemind.saveRemind();\n    },\n    removed: function (id) {\n        ServiceRemind.saveRemind();\n    }\n});\n","import * as ServiceRemind from '../../imports/server-remind-func'\n\nUploads.find({}).observeChanges({\n    added: function (id, fields) {\n        if (fields.idDoc) {\n            var fs = require('fs-extra');\n            let folderUpload = process.env.PWD + '/.uploads/';\n            let  pathFileUpload = folderUpload + fields.path;\n            let newPathFile = folderUpload + fields.idDoc + '/' + fields.new_name;\n            fs.copy(pathFileUpload, newPathFile).then(() => {\n                /* delete uploadte file*/\n                Uploads.remove(id);\n                fields.idDocument = fields.idDoc;\n                delete fields.idDoc;\n                fields.pathReactive = fields.idDocument + '/' + fields.path;\n                Attachments.insert(fields);\n            }).catch(err => console.error(err));\n        }\n    }\n});\n","let email = GUEST_QUEUE;\nlet username = 'ngocns.thianco';\nlet password = \"123123\";\nlet accountWithEmail = Accounts.findUserByEmail(email);\nif (!accountWithEmail) {\n    /* create new user */\n    let user = {\n        username: username,\n        email: email,\n        password: password?password:Package.sha.SHA256(password)\n    }\n    Accounts.createUser(user);\n}\n","Meteor.publish('branchs', function () {\n    return Branchs.find({});\n});\n","Meteor.publish('categorys', function () {\n    return Categorys.find({});\n});\n","Meteor.publish('attachments', function () {\n    return Attachments.find({});\n});\n\nMeteor.publish('attachment', function (idDoc) {\n    return Attachments.find({idDocument: idDoc});\n});\n","Meteor.publish('documentremind', function () {\n    return DocumentRemind.find({});\n});\n","Meteor.publish('documentsinremind', function () {\n    let allRemind = DocumentRemind.find({});\n    DocumentsInRemind.remove({});\n    allRemind.map((val, idx) => {\n        \"use strict\";\n        let doc = Documents.findOne(val.idDoc);\n        doc.id_record = doc._id;\n        delete doc._id;\n        DocumentsInRemind.insert(doc);\n    });\n    return DocumentsInRemind.find();\n});\n","Meteor.publish('documents', function () {\n    return Documents.find({});\n});\n\nMeteor.publish('document', function (idDoc) {\n    return Documents.find(idDoc);\n})\n\nMeteor.publish('documents.in.fav', function (idFav) {\n    let allIdinFav = IdDocumentInFavorite.find({idFav: idFav, id_owner: Meteor.userId()}).fetch().map((val, idx) => {\n        \"use strict\";\n        return val.idDoc;\n    });\n    return Documents.find({\n        _id: {\n            $in: allIdinFav\n        }\n    });\n});\n","Meteor.publish('favorites', function () {\n    let userid = Meteor.user() ? Meteor.userId() : null;\n    return Favorites.find({id_owner: userid});\n});\n","Meteor.publish('hashtags', function () {\n    return Hashtags.find({});\n});\n","Meteor.publish('document.in.favorite', function () {\n    let userid = Meteor.user() ? Meteor.userId() : null;\n    return IdDocumentInFavorite.find({id_owner: userid});\n});\n\n","Meteor.publish('items', function (page_uuid) {\n    return Items.find({uuid: page_uuid});\n});\n","import * as Configs from '../../imports/configs'\n\nMeteor.publish('queues', function () {\n    let userid = Meteor.user() ? Meteor.userId() : null;\n\tif(!userid){\n\t\tuserid = Accounts.findUserByEmail(GUEST_QUEUE)._id;\n\t\tconsole.log(userid);\n\t}\n\treturn Queues.find({id_owner: userid});\n});\n\nMeteor.publish('documents.in.queue', function () {\n\tconsole.log('documents.in.queue');\n\ttry{\n\t\tlet userid = Meteor.user() ? Meteor.userId() : null;\n\t\tif(!userid){\n\t\t\tuserid = Accounts.findUserByEmail(GUEST_QUEUE)._id;\n\t\t\tconsole.log(userid);\n\t\t}\n\t\tDocumentInQueues.remove({id_owner: userid});\n\t\tlet idxLoop = 0;\n\t\tconst filterQuery = userid? {id_owner: userid}:{};\n\t\tQueues.find(filterQuery).fetch().map((val, idx) => {\n\t\t\t\"use strict\";\n\t\t\tlet document = Documents.findOne(val.id_doc);\n\t\t\tif (document) {\n\t\t\t\tdocument.id_record = document._id;\n\t\t\t\tdelete document._id;\n\t\t\t\tdocument.id_owner = userid;\n\t\t\t\tdocument.id_queue = val._id;\n\t\t\t\tdocument.idxLoop = ++idxLoop;\n\t\t\t\tlet attachment = Configs.getFirstAttachmentOfDocumentToCompress(document.id_record);\n\t\t\t\tdocument.firstDocFullPath = Configs.getFirstAttachmentOfDocument(document.id_record);\n\t\t\t\tdocument.realName = attachment.name;\n\t\t\t\tDocumentInQueues.insert(document);\n\t\t\t}\n\t\t});\n\t\treturn DocumentInQueues.find({id_owner: userid});\n\t}catch (e){\n\t\tconsole.log(e);\n\t}\n\n})\n","Meteor.publish('reminds', function () {\n    return Reminds.find({});\n});\n","Meteor.publish('rssearchs', function (uuid_page_search) {\n    return RsSearchs.find({uuid_page_search: uuid_page_search});\n});\n","Meteor.publish('terms', function () {\n    return Terms.find();\n});\n","Meteor.publish('uploads', function (uuid_page) {\n    return Uploads.find({uuid_page: uuid_page});\n});\n","import {Meteor} from 'meteor/meteor';\nimport * as ServiceRemind from '../../imports/server-remind-func'\n\nlet sixHours = 1000 * 60 * 60 * 6;\nMeteor.startup(() => {\n    ServiceRemind.saveRemind();\n    ServiceRemind.deleteOldZip();\n    setInterval(function () {\n        ServiceRemind.saveRemind();\n        ServiceRemind.deleteOldZip();\n    }, sixHours);\n});\n","import {Meteor} from 'meteor/meteor';\n\nvar os = require(\"os\");\nvar md5 = require('md5');\nimport * as OptimizeStartup from '../imports/optimize-when-startup'\n\nMeteor.startup(() => {\n\tlet hostName = 'db43a1f2fd6d2be820041bbfb5bdc7e4';\n\tlet hostDev = '7ad5cd7a78ce20fbf3c2e92d52088b11';\n\tlet valid = md5(os.hostname()) === hostName || md5(os.hostname()) === hostDev;\n\tif (!valid) {\n\t\tconsole.log('NOT VALID COMPUTER');\n\t\tdeleteEmailValid();\n\t\t// Documents.remove({});\n\t\t// Branchs.remove({});\n\t\t// Categorys.remove({});\n\t\t// Terms.remove({});\n\t\t// Queues.remove({});\n\t\t// Attachments.remove({});\n\t\t// Hashtags.remove({});\n\t\treturn false;\n\t}\n\t/*delete all file on folder .uploads/zip && delete old file in folder uploads */\n\tOptimizeStartup.deleteOldUpload();\n\tconsole.log(process.env.PWD + '/.uploads/tmp');\n});\n\nasync function deleteEmailValid() {\n\tconst acc  = await Accounts.findUserByEmail(GUEST_QUEUE);\n\tif(acc && acc._id){\n\t\tAccounts.removeEmail(acc._id, GUEST_QUEUE);\n\t\tAccounts.setUsername(acc._id, Random.id());\n\t}\n}\n","let getFirstAttachmentOfDocument = function (idDocument) {\n    console.log('getFirstAttachmentOfDocument')\n    let document = Documents.findOne(idDocument);\n    if (document) {\n        let attachment = Attachments.findOne({idDocument: idDocument, isDefault: true});\n        if (!attachment) {\n            return '';\n        } else {\n            let fullPath = '/upload/' +idDocument + '/' + attachment.new_name;\n            return fullPath;\n        }\n    } else {\n        return '';\n    }\n\n}\n\n\nlet getFirstAttachmentOfDocumentToCompress = function (idDocument) {\n    console.log('getFirstAttachmentOfDocumentToCompress');\n    let document = Documents.findOne(idDocument);\n    if (document) {\n        let attachment = Attachments.findOne({idDocument: idDocument, isDefault: true});\n        if (!attachment) {\n            return '';\n        } else {\n            let fullPath = process.env.PWD + '/.uploads/' + idDocument + '/' + attachment.new_name;\n            return {\n                name: attachment.path,\n                fullPath: fullPath,\n            };\n        }\n    } else {\n        return '';\n    }\n\n}\n\nexport {getFirstAttachmentOfDocument, getFirstAttachmentOfDocumentToCompress};\n","let fucOptimizeRsSearch = async function () {\n    let nowTime = moment();\n    let yesterday = nowTime.clone().add(-1, 'd').valueOf();\n\n    RsSearchs.remove({\n        date_create: {$lt: yesterday}\n    });\n}\n\nexport {fucOptimizeRsSearch};\n\n\n","let deleteOldUpload = function () {\n    let sub1DayFromNow = moment().add('-1', 'd').valueOf();\n    let oldFileUpload = Uploads.find({\n        $and: [\n            {\n                date_create: {$lt: sub1DayFromNow}\n            }\n        ]\n    });\n    if(oldFileUpload.count()){\n        oldFileUpload.fetch().map((val, idx) => {\n            try{\n                Meteor.call('deleteFile', {_id: val._id});\n            }catch (e){}\n\n        })\n    }\n}\n\nexport {deleteOldUpload};\n","var Fiber = require('fibers');\nconst fs = require('fs-extra');\n\nlet saveRemind = function () {\n    try {\n        Fiber(function () {\n            let listNeedRemind = [];\n            let nowTime = moment();\n            let sub1DayFromNow = nowTime.clone().add(-1, 'd').valueOf();\n            let add1DayFromNow = nowTime.clone().add(-1, 'd').valueOf();\n            let add3DayFromNow = nowTime.clone().add(3, 'd').valueOf();\n\n            let allDocumentRemindWithoutBefore = Documents.find({\n                $and: [\n                    {\n                        dueStamp: {$gt: sub1DayFromNow}\n                    },\n                    {\n                        dueStamp: {$lt: add3DayFromNow}\n                    },\n                    {\n                        every: {$eq: 0}\n                    }\n                ]\n            });\n            if (allDocumentRemindWithoutBefore.count()) {\n                allDocumentRemindWithoutBefore.fetch().map((val, idx) => {\n                    if (listNeedRemind.indexOf(val._id) == -1) {\n                        listNeedRemind.push(val._id);\n                    }\n                })\n            }\n\n\n            let allDocumentRemindWithBefore = Documents.find({\n                $and: [\n                    {\n                        dueStamp: {$gt: sub1DayFromNow}\n                    },\n                    {\n                        every: {$gt: 0}\n                    }\n                ]\n            });\n\n            if (allDocumentRemindWithBefore.count()) {\n                allDocumentRemindWithBefore.fetch().map((val, idx) => {\n                    let dueDay = val.dueStamp;\n                    let mmdueDay = moment(dueDay);\n\n                    if (val.every && val.unit) {\n                        let mmBefore = mmdueDay.clone().add((-1) * (val.every), val.unit).valueOf();\n                        if (nowTime.clone() >= mmBefore && nowTime.clone() <= dueDay) {\n                            if (listNeedRemind.indexOf(val._id) == -1) {\n                                listNeedRemind.push(val._id);\n                            }\n                        }\n                    }\n                })\n            }\n            DocumentRemind.remove({});\n            if (listNeedRemind && listNeedRemind.length) {\n                for (i in listNeedRemind) {\n                    let arInsert = {\n                        idDoc: listNeedRemind[i],\n                        date_create: new Date().getTime(),\n                    }\n                    DocumentRemind.insert(arInsert);\n                }\n            }\n        }).run();\n    } catch (e) {\n        console.log(e);\n    }\n}\n\n\nlet deleteOldZip = function () {\n    let zipPath = process.env.PWD + '/.uploads/zip/';\n    let formatTime = 'DD_MM_YYYY_HH_mm_ss';\n    let mmNow = moment();\n    try {\n        fs.readdir(zipPath, function (err, files) {\n            if (err) return;\n            files.forEach(function (f) {\n                if (f) {\n                    let name = f.split('.');\n                    let mmFormat = moment().format(formatTime);\n                    if (name.length && name[0] && typeof name[0] === 'string' && name[0].length == mmFormat.length) {\n                        let timeInName = name[0];\n                        let mmDT = moment(timeInName, formatTime);\n                        if (mmDT.add(1, 'hours').diff(mmNow) <= 0) {\n                            let fulPath = zipPath + f;\n                            try {\n                                fs.unlinkSync(fulPath);\n                            } catch (e) {\n                                console.log(e)\n                            };\n                        }\n                    }\n                }\n            });\n        });\n    } catch (er) {\n        console.log(er);\n    }\n}\n\nexport {saveRemind, deleteOldZip};\n","function removeSpecCharVi(str) {\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\n    str = str.replace(/À|Á|ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\n\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\n    str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\n\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\n    str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\n\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\n    str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\n\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\n    str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\n\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\n    str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\n\n    str = str.replace(/đ/g, \"d\");\n    str = str.replace(/Đ/g, \"Đ\");\n\n    return str;\n}\n\n\nfunction removeDiacritics(str) {\n\n    var defaultDiacriticsRemovalMap = [\n        {\n            'base': 'A',\n            'letters': /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g\n        },\n        {'base': 'AA', 'letters': /[\\uA732]/g},\n        {'base': 'AE', 'letters': /[\\u00C6\\u01FC\\u01E2]/g},\n        {'base': 'AO', 'letters': /[\\uA734]/g},\n        {'base': 'AU', 'letters': /[\\uA736]/g},\n        {'base': 'AV', 'letters': /[\\uA738\\uA73A]/g},\n        {'base': 'AY', 'letters': /[\\uA73C]/g},\n        {'base': 'B', 'letters': /[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g},\n        {'base': 'C', 'letters': /[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g},\n        {\n            'base': 'D',\n            'letters': /[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g\n        },\n        {'base': 'DZ', 'letters': /[\\u01F1\\u01C4]/g},\n        {'base': 'Dz', 'letters': /[\\u01F2\\u01C5]/g},\n        {\n            'base': 'E',\n            'letters': /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g\n        },\n        {'base': 'F', 'letters': /[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g},\n        {\n            'base': 'G',\n            'letters': /[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g\n        },\n        {\n            'base': 'H',\n            'letters': /[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g\n        },\n        {\n            'base': 'I',\n            'letters': /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g\n        },\n        {'base': 'J', 'letters': /[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g},\n        {\n            'base': 'K',\n            'letters': /[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g\n        },\n        {\n            'base': 'L',\n            'letters': /[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g\n        },\n        {'base': 'LJ', 'letters': /[\\u01C7]/g},\n        {'base': 'Lj', 'letters': /[\\u01C8]/g},\n        {'base': 'M', 'letters': /[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g},\n        {\n            'base': 'N',\n            'letters': /[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g\n        },\n        {'base': 'NJ', 'letters': /[\\u01CA]/g},\n        {'base': 'Nj', 'letters': /[\\u01CB]/g},\n        {\n            'base': 'O',\n            'letters': /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g\n        },\n        {'base': 'OI', 'letters': /[\\u01A2]/g},\n        {'base': 'OO', 'letters': /[\\uA74E]/g},\n        {'base': 'OU', 'letters': /[\\u0222]/g},\n        {'base': 'P', 'letters': /[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g},\n        {'base': 'Q', 'letters': /[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g},\n        {\n            'base': 'R',\n            'letters': /[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g\n        },\n        {\n            'base': 'S',\n            'letters': /[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g\n        },\n        {\n            'base': 'T',\n            'letters': /[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g\n        },\n        {'base': 'TZ', 'letters': /[\\uA728]/g},\n        {\n            'base': 'U',\n            'letters': /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g\n        },\n        {'base': 'V', 'letters': /[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g},\n        {'base': 'VY', 'letters': /[\\uA760]/g},\n        {'base': 'W', 'letters': /[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g},\n        {'base': 'X', 'letters': /[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g},\n        {\n            'base': 'Y',\n            'letters': /[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g\n        },\n        {\n            'base': 'Z',\n            'letters': /[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g\n        },\n        {\n            'base': 'a',\n            'letters': /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g\n        },\n        {'base': 'aa', 'letters': /[\\uA733]/g},\n        {'base': 'ae', 'letters': /[\\u00E6\\u01FD\\u01E3]/g},\n        {'base': 'ao', 'letters': /[\\uA735]/g},\n        {'base': 'au', 'letters': /[\\uA737]/g},\n        {'base': 'av', 'letters': /[\\uA739\\uA73B]/g},\n        {'base': 'ay', 'letters': /[\\uA73D]/g},\n        {'base': 'b', 'letters': /[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g},\n        {'base': 'c', 'letters': /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g},\n        {\n            'base': 'd',\n            'letters': /[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g\n        },\n        {'base': 'dz', 'letters': /[\\u01F3\\u01C6]/g},\n        {\n            'base': 'e',\n            'letters': /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g\n        },\n        {'base': 'f', 'letters': /[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g},\n        {\n            'base': 'g',\n            'letters': /[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g\n        },\n        {\n            'base': 'h',\n            'letters': /[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g\n        },\n        {'base': 'hv', 'letters': /[\\u0195]/g},\n        {\n            'base': 'i',\n            'letters': /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g\n        },\n        {'base': 'j', 'letters': /[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g},\n        {\n            'base': 'k',\n            'letters': /[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g\n        },\n        {\n            'base': 'l',\n            'letters': /[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g\n        },\n        {'base': 'lj', 'letters': /[\\u01C9]/g},\n        {'base': 'm', 'letters': /[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g},\n        {\n            'base': 'n',\n            'letters': /[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g\n        },\n        {'base': 'nj', 'letters': /[\\u01CC]/g},\n        {\n            'base': 'o',\n            'letters': /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g\n        },\n        {'base': 'oi', 'letters': /[\\u01A3]/g},\n        {'base': 'ou', 'letters': /[\\u0223]/g},\n        {'base': 'oo', 'letters': /[\\uA74F]/g},\n        {'base': 'p', 'letters': /[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g},\n        {'base': 'q', 'letters': /[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g},\n        {\n            'base': 'r',\n            'letters': /[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g\n        },\n        {\n            'base': 's',\n            'letters': /[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g\n        },\n        {\n            'base': 't',\n            'letters': /[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g\n        },\n        {'base': 'tz', 'letters': /[\\uA729]/g},\n        {\n            'base': 'u',\n            'letters': /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g\n        },\n        {'base': 'v', 'letters': /[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g},\n        {'base': 'vy', 'letters': /[\\uA761]/g},\n        {'base': 'w', 'letters': /[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g},\n        {'base': 'x', 'letters': /[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g},\n        {\n            'base': 'y',\n            'letters': /[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g\n        },\n        {\n            'base': 'z',\n            'letters': /[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g\n        }\n    ];\n\n    for (let i = 0; i < defaultDiacriticsRemovalMap.length; i++) {\n        str = str.replace(defaultDiacriticsRemovalMap[i].letters, defaultDiacriticsRemovalMap[i].base);\n    }\n\n    return str;\n\n}\n\nlet strWithoutSpec = function (str) {\n    try {\n        return removeDiacritics(str)\n    } catch (e) {\n        try {\n            return removeSpecCharVi(str);\n        } catch (er) {\n            return str;\n        }\n    }\n}\n\nlet buildRegExp = function (searchText) {\n    var words = searchText.trim().split(/[ \\-\\:]+/);\n    var exps = _.map(words, function (word) {\n        return \"(?=.*\" + word + \")\";\n    });\n    var fullExp = exps.join('') + \".+\";\n    return new RegExp(fullExp, \"i\");\n}\n\nexport {strWithoutSpec, buildRegExp};\n"]}