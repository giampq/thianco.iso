{"version":3,"sources":["meteor://💻app/lib/collections/branchs.js","meteor://💻app/lib/collections/categorys.js","meteor://💻app/lib/collections/client.document.in.queues.js","meteor://💻app/lib/collections/document.attachment.js","meteor://💻app/lib/collections/document.remind.js","meteor://💻app/lib/collections/documents.in.remind.js","meteor://💻app/lib/collections/documents.js","meteor://💻app/lib/collections/favorites.js","meteor://💻app/lib/collections/hashtags.js","meteor://💻app/lib/collections/iddoc.in.fav.js","meteor://💻app/lib/collections/items.js","meteor://💻app/lib/collections/queue.js","meteor://💻app/lib/collections/reminds.js","meteor://💻app/lib/collections/rssearchs.js","meteor://💻app/lib/collections/terms.js","meteor://💻app/lib/collections/uploads.js","meteor://💻app/lib/config/config.js","meteor://💻app/lib/search-api/api-find-document.js","meteor://💻app/lib/constants.js","meteor://💻app/lib/router.js","meteor://💻app/server/compress-and-download/compress.and.download.js","meteor://💻app/server/config-upload-server/init.js","meteor://💻app/server/database-observe/document.js","meteor://💻app/server/database-observe/uploads.js","meteor://💻app/server/init-user/init.js","meteor://💻app/server/publications/branchs.js","meteor://💻app/server/publications/categorys.js","meteor://💻app/server/publications/document-attachment.js","meteor://💻app/server/publications/documentremind.js","meteor://💻app/server/publications/documents.in.remind.js","meteor://💻app/server/publications/documents.js","meteor://💻app/server/publications/favorites.js","meteor://💻app/server/publications/hashtags.js","meteor://💻app/server/publications/iddoc.in.fav.js","meteor://💻app/server/publications/items.js","meteor://💻app/server/publications/queues.js","meteor://💻app/server/publications/reminds.js","meteor://💻app/server/publications/rssearchs.js","meteor://💻app/server/publications/terms.js","meteor://💻app/server/publications/uploads.js","meteor://💻app/server/remind-service/remind.js","meteor://💻app/server/main.js","meteor://💻app/imports/configs.js","meteor://💻app/imports/optimize-rs-search.js","meteor://💻app/imports/optimize-when-startup.js","meteor://💻app/imports/server-remind-func.js","meteor://💻app/imports/string-helpers.js"],"names":["Meteor","module","watch","require","v","Branchs","Mongo","Collection","isServer","methods","addNewBranch","data","check","userId","String","id_record","Match","Maybe","name","active","Boolean","user","branch","_","extend","id_owner","_id","date_create","Date","getTime","insert","updateBranch","date_update","update","$set","removeBranch","ids","Documents","findOne","$elemMatch","find","count","remove","Categorys","addNewCategory","category","updateCategory","removeCategory","document","DocumentInQueues","Attachments","addNewAttachment","DocumentRemind","DocumentsInRemind","StrFunc","deleteFolderRecursive","path","fs","existsSync","readdirSync","forEach","file","index","curPath","lstatSync","isDirectory","unlinkSync","rmdirSync","e","addNewDocument","console","log","Optional","OneOf","undefined","Array","hashtags","document_number","term","note","startStamp","Number","dueStamp","page_uuid","every","unit","firstAttachment","name_search","strWithoutSpec","document_number_search","idDocument","folderUpload","process","env","PWD","base","mkdirp","Fiber","err","folderUploadReplace","Uploads","fetch","map","el","idx","pathFileUpload","newPathFile","new_name","copy","then","attachment","oldImageId","pathReactive","call","catch","error","run","updateDocument","idDoc","setDefaultDocumentWithIdDoc","pageUUID","doc","isDefault","multi","setDefaultDocumentPageUUID","uuid_page","deleteDocument","addQuickDocument","key_unique","p","Promise","rs","rj","Favorites","addNewFavorite","favorite","updateFavorite","removeFavorite","Hashtags","addNewHashtag","hashtag","updateHashtag","removeHashtag","IdDocumentInFavorite","addIdDocToFav","idFav","fav","dataGet","$and","$eq","idDocInFav","success","message","mergeFavToQueue","countAdd","val","inQueue","Queues","id_doc","queue","clearFav","removeDocInFav","Items","Reminds","addNewRemind","interval","remind","updateRemind","removeRemind","RsSearchs","Terms","addNewTerm","updateTerm","removeTerm","allow","fields","modifier","Accounts","config","forbidClientAccountCreation","StrHelpers","Configs","RsSearchOpt","filter","branchs","categorys","terms","uuid_page_search","nameRegex","nameWithoutSpec","buildRegExp","dcNumbRegex","docnumWithoutSpec","queryFilter","length","$in","testResult","fucOptimizeRsSearch","docInfo","getFirstAttachmentOfDocumentToCompress","firstDocFullPath","getFirstAttachmentOfDocument","realName","fullPath","absoluteUrl","defaultOptions","rootUrl","WEB_KEY","MM_KEY","days","weeks","months","quarters","years","requireLogin","loggingIn","render","loadingTemplate","next","Router","configure","layoutTemplate","notFoundTemplate","waitOn","subscribe","route","onBeforeAction","params","_idFav","_uuid","uuid","action","cloneUUID","paramUUID","trim","redirect","item","uploads","_idDoc","zip","compressAndDownload","resolve","callAPICompressQueues","er","files","arIds","split","zipName","moment","format","zipPath","zipFullPath","countFileAdded","i","id","firstDoc","firstDocName","toString","readFileSync","generate","base64","compression","writeFileSync","urlDownload","StringHelpers","startup","UploadServer","init","tmpDir","uploadDir","checkCreateDirectories","getDirectory","fileInfo","formData","directoryName","getFileName","prefix","finished","timestamp","valueOf","time","newname","replace","ext","pop","mimeTypes","upload","Error","delete","fulPath","ServiceRemind","observeChanges","added","saveRemind","changed","removed","email","username","password","accountWithEmail","findUserByEmail","Package","sha","SHA256","createUser","publish","allRemind","allIdinFav","userid","idxLoop","id_queue","sixHours","deleteOldZip","setInterval","OptimizeStartup","os","md5","hostName","hostDev","valid","hostname","deleteOldUpload","export","baseUrl","ROOT_URL","nowTime","yesterday","clone","add","$lt","sub1DayFromNow","oldFileUpload","listNeedRemind","add1DayFromNow","add3DayFromNow","allDocumentRemindWithoutBefore","$gt","indexOf","push","allDocumentRemindWithBefore","dueDay","mmdueDay","mmBefore","arInsert","formatTime","mmNow","readdir","f","mmFormat","timeInName","mmDT","diff","removeSpecCharVi","str","removeDiacritics","defaultDiacriticsRemovalMap","letters","searchText","words","exps","word","fullExp","join","RegExp"],"mappings":"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","file":"/app.js","sourcesContent":["import {Meteor} from 'meteor/meteor'\n\nBranchs = new Mongo.Collection('branchs');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewBranch: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean\n            });\n\n            let user = Meteor.user();\n            let branch = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete branch.id_record;\n            return await Branchs.insert(branch);\n        },\n        updateBranch: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean\n            });\n            let _id = data.id_record;\n            let branch = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete branch.id_record;\n            return await  Branchs.update(_id, {\n                $set: branch,\n            });\n\n        },\n        removeBranch: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            /* check term using other document */\n            let ids = [_id];\n            let branch = await Documents.findOne({\n                branch: {\n                    $elemMatch: {\n                        \"$in\": ids\n                    }\n                }\n            });\n\n            if(branch){\n                return null;\n            }\n\n            if (Branchs.find(_id).count()) {\n                return await Branchs.remove({_id: _id});\n            } else {\n                return null;\n            }\n        }\n    });\n}\n\n\n// Branchs.find().observeChanges({\n//     added: function(id, object) {\n//     },\n//     changed: function (id, object) {\n//     },\n//     removed: function (id, object) {\n//     }\n// });\n","import {Meteor} from 'meteor/meteor'\n\nCategorys = new Mongo.Collection('categorys');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewCategory: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean\n            });\n\n            let user = Meteor.user();\n            let category = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete category.id_record;\n            return await Categorys.insert(category);\n        },\n        updateCategory: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean\n            });\n            let _id = data.id_record;\n            let category = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete category.id_record;\n            return await  Categorys.update(_id, {\n                $set: category,\n            });\n\n        },\n        removeCategory: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            //check document using category\n            let document = await Documents.findOne({category: _id});\n            if(document){\n                return null;\n            }\n            if (Categorys.find(_id).count()) {\n                return await Categorys.remove({_id: _id});\n            } else {\n                return null;\n            }\n        }\n    });\n}\n\n\n\n","DocumentInQueues = new Mongo.Collection('document-in-queues');\n","import {Meteor} from 'meteor/meteor'\n\nAttachments = new Mongo.Collection('attachments');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewAttachment: async function (document) {\n            return await Attachments.insert(document);\n        }\n    });\n}\n\n","DocumentRemind = new Mongo.Collection('document-remind');\n","DocumentsInRemind = new Mongo.Collection('documents-in-remind');\n","import {Meteor} from 'meteor/meteor'\nDocuments = new Mongo.Collection('documents');\nlet StrFunc = require('../../imports/string-helpers');\n\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewDocument: async function (document) {\n            check(Meteor.userId(), String);\n            console.log(document);\n            check(document, {\n                branch: Match.Optional(Match.OneOf(undefined, null, Array)),\n                category: Match.Optional(Match.OneOf(undefined, null, String)),\n                hashtags: Match.Optional(Match.OneOf(undefined, null, Array)),\n                name: String,\n                document_number: Match.Optional(Match.OneOf(undefined, null, String)),\n                term: Match.Optional(Match.OneOf(undefined, null, Array)),\n                note: Match.Optional(Match.OneOf(undefined, null, String)),\n                startStamp: Match.Optional(Match.OneOf(undefined, null, Number)),\n                dueStamp: Match.Optional(Match.OneOf(undefined, null, Number)),\n                page_uuid: String,\n                every: Number,\n                unit: String,\n                firstAttachment: Match.Optional(Match.OneOf(undefined, null, String)),\n            });\n            user = Meteor.user();\n            document = _.extend(document, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n                name_search: StrFunc.strWithoutSpec(document.name),\n                document_number_search: StrFunc.strWithoutSpec(document.document_number)\n            });\n            let page_uuid = document.page_uuid;\n            // create new document without attachments\n            let idDocument = await Documents.insert(document);\n            let folderUpload = process.env.PWD + '/.uploads/';\n            let base = process.env.PWD + '/.uploads/' + idDocument;\n            var mkdirp = require('mkdirp');\n            var Fiber = require('fibers');\n            var fs = require('fs-extra')\n            mkdirp(base, function (err) {\n                if (err) {\n                    console.log(err);\n                } else {\n                    console.log('create new folder: ' + base);\n                    //move attachment from tmp to documents-folder\n                    Fiber(function () {\n                        let folderUploadReplace = '/upload/';\n                        Uploads.find({'uuid_page': page_uuid}).fetch().map((el, idx) => {\n                            let pathFileUpload = (folderUpload + el.path);\n                            let newPathFile = base + '/' + el.new_name;\n                            fs.copy(pathFileUpload, newPathFile)\n                                .then(() => {\n                                    // save new file to attachment\n                                    let attachment = el;\n                                    let oldImageId = attachment._id;\n                                    delete attachment._id;\n                                    attachment.pathReactive = idDocument + '/' + el.path;\n                                    attachment.idDocument = idDocument;\n                                    Meteor.call('addNewAttachment', attachment);\n                                    Meteor.call('deleteFile', {_id: oldImageId});\n                                }).catch(err => console.error(err))\n                        });\n                    }).run();\n                }\n                // path exists unless there was an error\n            });\n        },\n    });\n\n    Meteor.methods({\n        updateDocument: async function (document) {\n            check(Meteor.userId(), String);\n            check(document, {\n                _id: String,\n                branch: Match.Optional(Match.OneOf(undefined, null, Array)),\n                category: Match.Optional(Match.OneOf(undefined, null, String)),\n                hashtags: Match.Optional(Match.OneOf(undefined, null, Array)),\n                name: String,\n                document_number: Match.Optional(Match.OneOf(undefined, null, String)),\n                term: Match.Optional(Match.OneOf(undefined, null, Array)),\n                note: Match.Optional(Match.OneOf(undefined, null, String)),\n                startStamp: Match.Optional(Match.OneOf(undefined, null, Number)),\n                dueStamp: Match.Optional(Match.OneOf(undefined, null, Number)),\n                page_uuid: String,\n                every: Number,\n                unit: String,\n                firstAttachment: Match.Optional(Match.OneOf(undefined, null, String)),\n            });\n            user = Meteor.user();\n            document.name_search = StrFunc.strWithoutSpec(document.name);\n            document.document_number_search = StrFunc.strWithoutSpec(document.document_number);\n            document = _.extend(document, {\n                date_update: new Date().getTime(),\n            });\n            let idDoc = document._id;\n            delete document._id;\n            return await  Documents.update(idDoc, {\n                $set: document,\n            });\n        },\n    });\n\n\n    Meteor.methods({\n        setDefaultDocumentWithIdDoc: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                _id: String,\n                pageUUID: String,\n                idDocument: String,\n            });\n            // _id is attachment id\n            let idDoc = data.idDocument;\n            let doc = Documents.findOne(idDoc);\n            if(doc){\n                Attachments.update({idDocument: idDoc}, {\n                    $set: {\n                        isDefault: false,\n                    }\n                }, {multi: true});\n                Attachments.update(data._id, {\n                    $set: {\n                        isDefault: true,\n                    }\n                })\n            }\n        }\n    });\n\n\n    Meteor.methods({\n        setDefaultDocumentPageUUID: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                _id: String,\n                pageUUID: String,\n            });\n            Uploads.update({uuid_page: data.pageUUID}, {\n                $set: {\n                    isDefault: false,\n                }\n            }, {multi: true});\n            Uploads.update(data._id, {\n                $set: {\n                    isDefault: true,\n                }\n            })\n        }\n    })\n\n    Meteor.methods({\n        deleteDocument: function (idDoc) {\n            check(Meteor.userId(), String);\n            check(idDoc, String);\n            try{\n                var Fiber = require('fibers');\n                var fs = require('fs-extra');\n                Fiber(function () {\n                    let doc = Documents.findOne(idDoc);\n                    if(!doc){\n                        return false;\n                    }\n                    Attachments.remove({idDocument: idDoc}, {multi: true});\n                    Documents.remove(idDoc);\n                    var fs = require('fs-extra');\n                    let folderUpload = process.env.PWD + '/.uploads/' + idDoc;\n                    console.log('delete: ' + folderUpload);\n                    deleteFolderRecursive(folderUpload, fs);\n                    return true;\n                }).run();\n            }catch (e){\n                return false;\n            }\n        }\n    });\n\n    function deleteFolderRecursive(path, fs) {\n        try{\n            if (fs.existsSync(path)) {\n                fs.readdirSync(path).forEach(function (file, index) {\n                    var curPath = path + \"/\" + file;\n                    if (fs.lstatSync(curPath).isDirectory()) { // recurse\n                        deleteFolderRecursive(curPath, fs);\n                    } else { // delete file\n                        fs.unlinkSync(curPath);\n                    }\n                });\n                fs.rmdirSync(path);\n            }\n        }catch (e){}\n    };\n\n    Meteor.methods({\n        addQuickDocument: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                branch: Match.Optional(Match.OneOf(undefined, null, Array)),\n                category: Match.Optional(Match.OneOf(undefined, null, String)),\n                page_uuid: String,\n                hashtags: Match.Optional(Match.OneOf(undefined, null, Array)),\n            });\n            let user = Meteor.userId();\n            var Fiber = require('fibers');\n            Fiber(function () {\n                //get all attachment in page uuid\n                Uploads.find({'uuid_page': data.page_uuid}).fetch().map((el, idx) => {\n                    let name = el.path;\n                    let document = _.extend(data, {\n                        id_owner: user._id,\n                        date_create: new Date().getTime(),\n                        name: name,\n                        name_search: StrFunc.strWithoutSpec(name),\n                        firstAttachment: el.key_unique\n                    });\n                    let p = new Promise(function (rs, rj) {\n                        rs(Documents.insert(document));\n                    });\n\n                    p.then(idDoc => {\n                        if(idDoc){\n                            let folderUpload = process.env.PWD + '/.uploads/';\n                            let base = process.env.PWD + '/.uploads/' + idDoc;\n                            var mkdirp = require('mkdirp');\n                            var fs = require('fs-extra');\n                            mkdirp(base, function (err) {\n                                if (err) {\n                                    console.log(err);\n                                } else {\n                                    console.log('create new folder: ' + base);\n                                    console.log('save attachment');\n                                    let pathFileUpload = (folderUpload + el.path);\n                                    let newPathFile = base + '/' + el.new_name;\n                                    fs.copy(pathFileUpload, newPathFile)\n                                        .then(() => {\n                                        console.log('copy');\n                                            let attachment = el;\n                                            let oldImageId = attachment._id;\n                                            delete attachment._id;\n                                            attachment.pathReactive = idDoc + '/' + el.path;\n                                            attachment.idDocument = idDoc;\n                                            attachment.isDefault = true;\n                                            Meteor.call('addNewAttachment', attachment);\n                                            Meteor.call('deleteFile', {_id: oldImageId});\n                                        }).catch(err => console.error(err))\n                                }\n                            });\n                        }\n                    });\n\n                    p.catch(e => {\n                        console.log(e);\n                    })\n                    return p;\n                });\n            }).run();\n        }\n    })\n}\n\n\n\n","Favorites = new Mongo.Collection('favorites');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewFavorite: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean,\n            });\n\n            let user = Meteor.user();\n            let favorite = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete favorite.id_record;\n            return await Favorites.insert(favorite);\n        },\n        updateFavorite: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean,\n            });\n            let _id = data.id_record;\n            let favorite = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete favorite.id_record;\n            return await  Favorites.update(_id, {\n                $set: favorite,\n            });\n\n        },\n        removeFavorite: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            return await Favorites.remove({_id: _id});\n        }\n    });\n}\n","import {Meteor} from 'meteor/meteor'\n\nHashtags = new Mongo.Collection('hashtags');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewHashtag: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean\n            });\n\n            let user = Meteor.user();\n            let hashtag = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete hashtag.id_record;\n            return await Hashtags.insert(hashtag);\n        },\n        updateHashtag: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean\n            });\n            let _id = data.id_record;\n            let hashtag = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete hashtag.id_record;\n            return await  Hashtags.update(_id, {\n                $set: hashtag,\n            });\n\n        },\n        removeHashtag: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            /* check term using other document */\n            let ids = [_id];\n            let hashtag = await Documents.findOne({\n                hashtag: {\n                    $elemMatch: {\n                        \"$in\": ids\n                    }\n                }\n            });\n\n            if(hashtag){\n                return null;\n            }\n\n            if (Hashtags.find(_id).count()) {\n                return await Hashtags.remove({_id: _id});\n            } else {\n                return null;\n            }\n        }\n    });\n}\n","IdDocumentInFavorite = new Mongo.Collection('id-doc-in-fav');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addIdDocToFav: function (data) {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            check(data, {\n                idDoc: String,\n                idFav: String,\n            });\n\n            let fav = Favorites.findOne(data.idFav);\n            let doc = Documents.findOne(data.idDoc);\n            if (fav && doc) {\n                let dataGet = IdDocumentInFavorite.findOne({\n                    $and: [\n                        {\n                            idDoc: {$eq: data.idDoc}\n                        },\n                        {\n                            idFav: {$eq: data.idFav}\n                        }\n                    ]\n                });\n\n                if (!dataGet) {\n                    let user = Meteor.user();\n                    let idDocInFav = _.extend(data, {\n                        id_owner: user._id,\n                        date_create: new Date().getTime(),\n                    });\n                    IdDocumentInFavorite.insert(idDocInFav);\n                    return {\n                        success: true,\n                        message: 'add \"' + doc.name + '\" to favorite \"' + fav.name + '\" success'\n                    }\n                } else {\n                    return {\n                        success: false,\n                        message: '\"' + doc.name + '\"' + '  already exists in \"' + fav.name + '\"',\n                    }\n                }\n            } else {\n                return {\n                    success: false,\n                    message: \"Data invalid\",\n                }\n            }\n        }\n    });\n\n\n    Meteor.methods({\n        mergeFavToQueue: function (idFav) {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            check(idFav, String);\n            let fav = Favorites.findOne(idFav);\n            if (fav) {\n                let idDocInFav = IdDocumentInFavorite.find({\n                    id_owner: Meteor.userId(),\n                    idFav: idFav\n                });\n                if (idDocInFav.count()) {\n                    let countAdd = 0;\n                    idDocInFav.fetch().map((val, idx) => {\n                        let inQueue = Queues.findOne({\n                            id_doc: val.idDoc,\n                            id_owner: Meteor.userId()\n                        });\n                        if (!inQueue) {\n                            let queue = {\n                                id_owner: Meteor.userId(),\n                                id_doc: val.idDoc,\n                                date_create: new Date().getTime(),\n                            }\n                            Queues.insert(queue);\n                            countAdd++;\n                        }\n                    });\n                    if (countAdd) {\n                        return {\n                            success: true,\n                            message: \"add \" + countAdd + \" document(s) to queue\"\n                        };\n                    } else {\n                        return {\n                            success: false,\n                            message: \"all documents in favorite already exists in queue\"\n                        };\n                    }\n                } else {\n                    return {\n                        success: false,\n                        message: \"documents in favorite is empty\"\n                    };\n                }\n            } else {\n                return {\n                    success: false,\n                    message: \"favorite is empty\"\n                };\n            }\n\n        }\n    });\n\n    Meteor.methods({\n        clearFav: function (idFav) {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            check(idFav, String);\n            let fav = Favorites.findOne(idFav);\n            if (fav) {\n                IdDocumentInFavorite.remove({\n                    id_owner: Meteor.userId(),\n                    idFav: idFav\n                });\n            }\n        }\n    });\n\n    Meteor.methods({\n        removeDocInFav: function (data) {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            check(data.idFav, String);\n            check(data.idDoc, String);\n            IdDocumentInFavorite.remove({\n                id_owner: Meteor.userId(),\n                idFav: data.idFav,\n                idDoc: data.idDoc,\n            });\n        }\n    });\n}\n","Items = new Mongo.Collection('items');\n","Queues = new Mongo.Collection('queues');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        'addQueue': async function (idDoc) {\n            check(Meteor.userId(), String);\n            check(idDoc, String);\n            let user = Meteor.user();\n            if (Documents.findOne(idDoc) && !Queues.findOne({id_doc: idDoc, id_owner: user._id})) {\n                return await Queues.insert({\n                    id_owner: user._id,\n                    id_doc: idDoc,\n                    date_create: new Date().getTime(),\n                });\n            }\n        },\n        'removeQueue': async function (idDoc) {\n            check(Meteor.userId(), String);\n            check(idDoc, String);\n            let user = Meteor.user();\n            let queue = Queues.findOne({id_doc: idDoc, id_owner: user._id});\n            if (queue) {\n                Queues.remove(queue._id);\n            }\n        },\n        \"cleanQueue\": function () {\n            \"use strict\";\n            check(Meteor.userId(), String);\n            Queues.remove({id_owner: Meteor.userId()});\n        }\n    });\n}\n","Reminds = new Mongo.Collection('reminds');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewRemind: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean,\n                interval: Number,\n            });\n\n            let user = Meteor.user();\n            let remind = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete remind.id_record;\n            return await Reminds.insert(remind);\n        },\n        updateRemind: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean,\n                interval: Number,\n            });\n            let _id = data.id_record;\n            let remind = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete remind.id_record;\n            return await  Reminds.update(_id, {\n                $set: remind,\n            });\n\n        },\n        removeRemind: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            if (Reminds.find(_id).count()) {\n                return await Reminds.remove({_id: _id});\n            } else {\n                return null;\n            }\n        }\n    });\n\n}\n\n\n","RsSearchs = new Mongo.Collection('rssearchs');\n","Terms = new Mongo.Collection('terms');\n\nif (Meteor.isServer) {\n    Meteor.methods({\n        addNewTerm: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: Match.Maybe(String),\n                name: String,\n                active: Boolean,\n            });\n\n            let user = Meteor.user();\n            let term = _.extend(data, {\n                id_owner: user._id,\n                date_create: new Date().getTime(),\n            });\n            delete term.id_record;\n            return await Terms.insert(term);\n        },\n        updateTerm: async function (data) {\n            check(Meteor.userId(), String);\n            check(data, {\n                id_record: String,\n                name: String,\n                active: Boolean,\n            });\n            let _id = data.id_record;\n            let term = _.extend(data, {\n                date_update: new Date().getTime(),\n            });\n            delete term.id_record;\n            return await  Terms.update(_id, {\n                $set: term,\n            });\n\n        },\n        removeTerm: async function (_id) {\n            check(Meteor.userId(), String);\n            check(_id, String);\n            if (Terms.find(_id).count()) {\n                /* check term using other document */\n                let ids = [_id];\n                let document = await Documents.findOne({\n                    term: {\n                        $elemMatch: {\n                            \"$in\": ids\n                        }\n                    }\n                });\n\n                if (!document) {\n                    return await Terms.remove({_id: _id});\n                }\n            }\n            return null;\n        }\n    });\n}\n\n\n\n","Uploads = new Mongo.Collection('uploads');\n\nUploads.allow({\n    insert: function (userId, doc) {\n        return !!userId;\n    },\n    update: function (userId, doc, fields, modifier) {\n        return !!userId;\n    }\n});\n","Accounts.config({\n    forbidClientAccountCreation: true\n});\n","import {Meteor} from 'meteor/meteor'\nimport * as StrHelpers from '../../imports/string-helpers'\nimport * as Configs from '../../imports/configs'\nimport * as RsSearchOpt from '../../imports/optimize-rs-search'\n\nMeteor.methods({\n    'findDocuments': async function (filter) {\n        try {\n            check(Meteor.userId(), String);\n            check(filter, {\n                branchs: Match.Optional(Match.OneOf(undefined, null, Array)),\n                categorys: Match.Optional(Match.OneOf(undefined, null, Array)),\n                name: Match.Optional(Match.OneOf(undefined, null, String)),\n                document_number: Match.Optional(Match.OneOf(undefined, null, String)),\n                terms: Match.Optional(Match.OneOf(undefined, null, Array)),\n                uuid_page_search: String,\n                hashtags: Match.Optional(Match.OneOf(undefined, null, Array)),\n            });\n            user = Meteor.user();\n            let branchs = filter.branchs;\n            let terms = filter.terms;\n            let categorys = filter.categorys;\n            let hashtags = filter.hashtags;\n            let nameRegex = '';\n            if (filter.name) {\n                let nameWithoutSpec = StrHelpers.strWithoutSpec(filter.name);\n                nameRegex = StrHelpers.buildRegExp(nameWithoutSpec);\n            }\n            let dcNumbRegex = '';\n            if (filter.document_number) {\n                let docnumWithoutSpec = StrHelpers.strWithoutSpec(filter.document_number);\n                dcNumbRegex = StrHelpers.buildRegExp(docnumWithoutSpec);\n            }\n            let queryFilter = {};\n            if (branchs && branchs.length) {\n                queryFilter.branch = {\n                    $elemMatch: {\n                        \"$in\": branchs\n                    }\n                }\n            }\n\n            if (categorys && categorys.length) {\n                queryFilter.category = {\n                    $in: categorys\n                }\n            }\n\n            if (terms && terms.length) {\n                queryFilter.term = {\n                    $elemMatch: {\n                        \"$in\": terms\n                    }\n                }\n            }\n\n            if (hashtags && hashtags.length) {\n                queryFilter.hashtags = {\n                    $elemMatch: {\n                        \"$in\": hashtags\n                    }\n                }\n            }\n\n            if (nameRegex) {\n                queryFilter.name_search = nameRegex;\n            }\n\n            if (dcNumbRegex) {\n                queryFilter.document_number_search = dcNumbRegex;\n            }\n            let testResult = await Documents.find({\n                $and: [queryFilter]\n            });\n\n            //save search\n            if (Meteor.isServer) {\n                RsSearchs.remove({uuid_page_search: filter.uuid_page_search});\n                RsSearchOpt.fucOptimizeRsSearch();\n            }\n\n            return await testResult.fetch().map((val, idx) => {\n                val.id_record = val._id;\n                delete val._id;\n                val.uuid_page_search = filter.uuid_page_search;\n                if (Meteor.isServer) {\n                    let docInfo = Configs.getFirstAttachmentOfDocumentToCompress(val.id_record);\n                    val.firstDocFullPath = Configs.getFirstAttachmentOfDocument(val.id_record);\n                    val.realName = docInfo.name;\n                    RsSearchs.insert(val);\n                }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n});\n\n\nfunction getFirstAttachmentOfDocument(idDocument) {\n    let attachment = Attachments.findOne({idDocument: idDocument});\n    if (!attachment) {\n        return '';\n    } else {\n        let fullPath = Meteor.absoluteUrl.defaultOptions.rootUrl + 'upload/' + attachment.pathReactive;\n        return fullPath;\n    }\n}\n","WEB_KEY = 'PQG-2212';\n\nMM_KEY = {\n    days: 'd',\n    weeks: 'w',\n    months: 'M',\n    quarters: \"Q\",\n    years: 'y',\n};\n","var requireLogin = function () {\n    if (!Meteor.user()) {\n        if (Meteor.loggingIn()) {\n            this.render(this.loadingTemplate);\n        } else {\n            this.render('deny');\n        }\n    } else {\n        this.next();\n    }\n}\n\nRouter.configure({\n    layoutTemplate: 'layout',\n    loadingTemplate: 'loading',\n    notFoundTemplate: 'notfound',\n    waitOn: function () {\n        return [\n            Meteor.subscribe('queues'),\n            Meteor.subscribe('documents.in.queue'),\n            Meteor.subscribe('categorys'),\n            Meteor.subscribe('branchs'),\n            Meteor.subscribe('terms'),\n            Meteor.subscribe('documentremind'),\n            Meteor.subscribe('documentsinremind'),\n            Meteor.subscribe('favorites'),\n            Meteor.subscribe('document.in.favorite'),\n            Meteor.subscribe('hashtags'),\n        ]\n    }\n});\n\nRouter.route('/', {\n    name: 'dashboard',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/categorys', {\n    name: 'categorys',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/branchs', {\n    name: 'branchs',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/terms', {\n    name: 'terms',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/favorites', {\n    name: 'favorites',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/reminds', {\n    name: 'reminds',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('reminds')\n        ]\n    }\n});\n\nRouter.route('/hashtags', {\n    name: 'hashtags',\n    onBeforeAction: requireLogin,\n});\n\nRouter.route('/all-favs', {\n    name: 'allfavs',\n    onBeforeAction: requireLogin,\n});\n\n\nRouter.route('/queues', {\n    name: 'printqueues',\n    onBeforeAction: requireLogin,\n});\n\n\nRouter.route('/docremind', {\n    name: 'documentremind',\n    onBeforeAction: requireLogin,\n});\n\n\nRouter.route('/comming-soon', {\n    name: 'commingsoon',\n    onBeforeAction: requireLogin,\n});\n\n\nRouter.route('/edit-fav/:_idFav', {\n    name: 'editfav',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('documents.in.fav', this.params._idFav),\n        ]\n    },\n    data: function () {\n        return {\n            idFav: this.params._idFav,\n        }\n    },\n});\n\n\nRouter.route('/all-documents/:_uuid', {\n    name: 'alldocuments',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('rssearchs', this.params._uuid),\n        ]\n    },\n    data: function () {\n        return {\n            uuid: this.params._uuid,\n        }\n    },\n    action: function () {\n        let cloneUUID = Meteor.uuid();\n        let paramUUID = this.params._uuid;\n        if (!paramUUID || paramUUID.trim().length != cloneUUID.length) {\n            this.redirect('/all-documents/' + cloneUUID);\n        } else {\n            this.render();\n        }\n\n    }\n});\n\nRouter.route('/add-documents/:_uuid', {\n    name: 'adddocuments',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('items', this.params._uuid),\n            Meteor.subscribe('uploads', this.params._uuid),\n        ]\n    },\n    data: function () {\n        return {\n            item: Items.findOne(),\n            uploads: Uploads.find(),\n            uuid: this.params._uuid,\n        }\n    },\n    action: function () {\n        let cloneUUID = Meteor.uuid();\n        let paramUUID = this.params._uuid;\n        if (!paramUUID || paramUUID.trim().length != cloneUUID.length) {\n            this.redirect('/add-documents/' + cloneUUID);\n        } else {\n            this.render();\n        }\n\n    }\n});\n\nRouter.route('/quick-add-documents/:_uuid', {\n    name: 'quickadddoc',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('items', this.params._uuid),\n            Meteor.subscribe('uploads', this.params._uuid),\n        ]\n    },\n    data: function () {\n        return {\n            item: Items.findOne(),\n            uploads: Uploads.find(),\n            uuid: this.params._uuid,\n        }\n    },\n    action: function () {\n        let cloneUUID = Meteor.uuid();\n        let paramUUID = this.params._uuid;\n        if (!paramUUID || paramUUID.trim().length != cloneUUID.length) {\n            this.redirect('/quick-add-documents/' + cloneUUID);\n        } else {\n            this.render();\n        }\n\n    }\n});\n\n\n\nRouter.route('/edit-document/:_idDoc/:_uuid', {\n    name: 'editdoc',\n    onBeforeAction: requireLogin,\n    waitOn: function () {\n        return [\n            Meteor.subscribe('items', this.params._uuid),\n            Meteor.subscribe('uploads', this.params._uuid),\n            Meteor.subscribe('document', this.params._idDoc),\n            Meteor.subscribe('attachment', this.params._idDoc),\n        ]\n    },\n    data: function () {\n        return {\n            item: Items.find(),\n            uploads: Attachments.find({idDocument: this.params._idDoc}),\n            uuid: this.params._uuid,\n            idDoc: this.params._idDoc,\n            doc: Documents.findOne(this.params._idDoc)\n        }\n    },\n    action: function () {\n        let idDoc = this.params._idDoc;\n        let cloneUUID = Meteor.uuid();\n        let paramUUID = this.params._uuid;\n        if (!paramUUID || paramUUID.trim().length != cloneUUID.length) {\n            this.redirect('/edit-document/' + idDoc + '/' + cloneUUID);\n        } else {\n            this.render();\n        }\n\n    }\n});\n","import {Meteor} from 'meteor/meteor';\nimport * as Configs from '../../imports/configs'\n\nconst fs = require('fs-extra');\nvar path = require('path');\nvar Fiber = require('fibers');\nvar zip = require('node-zip')();\n\n\nMeteor.methods({\n    compressAndDownload: function (ids) {\n        check(Meteor.userId(), String);\n        check(ids, String);\n        return new Promise(\n            function (resolve) {\n                resolve(callAPICompressQueues(ids));\n            }\n        ).catch(function (er) {\n            console.log(er);\n            return null;\n        });\n    }\n});\n\nfunction callAPICompressQueues(ids) {\n    zip.files = {};\n    let userId = Meteor.userId();\n    userId = userId ? userId : Meteor.uuid();\n    let arIds = ids.split(\",\");\n    if (arIds && arIds.length) {\n        let zipName = moment().format('DD_MM_YYYY_HH_mm_ss');\n        zipName += '.' + userId + '.zip';\n        let zipPath = process.env.PWD + '/.uploads/zip/';\n        let zipFullPath = zipPath + zipName;\n        let countFileAdded = 1;\n        for (let i in arIds) {\n            let id = arIds[i];\n            let document = Documents.findOne(id);\n            if (!document) {\n                continue;\n            } else {\n                let firstDoc = Configs.getFirstAttachmentOfDocumentToCompress(id);\n                let firstDocName = countFileAdded.toString() + '_' + firstDoc.name;\n                let firstDocFullPath = firstDoc.fullPath;\n                if (firstDoc) {\n                    zip.file(firstDocName, fs.readFileSync(firstDocFullPath));\n                    countFileAdded++;\n                }\n            }\n        }\n        if (countFileAdded > 1) {\n            var data = zip.generate({base64: false, compression: 'DEFLATE'});\n            fs.writeFileSync(zipFullPath, data, 'binary');\n            let urlDownload = Meteor.absoluteUrl.defaultOptions.rootUrl + 'upload/zip/' + zipName;\n            return urlDownload;\n        } else {\n            return null;\n        }\n    } else {\n        return null;\n    }\n}\n\n","import * as StringHelpers from  '../../imports/string-helpers'\n\nMeteor.startup(function () {\n    UploadServer.init({\n        tmpDir: process.env.PWD + '/.uploads/tmp',\n        uploadDir: process.env.PWD + '/.uploads/',\n        checkCreateDirectories: true,\n        getDirectory: function (fileInfo, formData) {\n            if (formData && formData.directoryName != null) {\n                return formData.directoryName;\n            }\n            return \"\";\n        },\n        getFileName: function (fileInfo, formData) {\n            if (formData && formData.prefix != null) {\n                return formData.prefix + '_' + fileInfo.name;\n            }\n            return fileInfo.name;\n        },\n        finished: function (fileInfo, formData) {\n            fileInfo.uuid = Meteor.uuid();\n            fileInfo.key_unique = fileInfo.uuid + '@' + new Date().getTime();\n            fileInfo.timestamp = moment().valueOf();\n            if (formData && formData.id_owner != null && formData.uuid != null) {\n                fileInfo.id_owner = formData.id_owner;\n                fileInfo.uuid_page = formData.uuid;\n                /*update file to folder document*/\n                if(formData && formData.idDoc){\n                    fileInfo.idDoc =  formData.idDoc;\n                }\n                let time = moment().format('YYYY_MM_DD_HH_mm_ss.');\n                let newname = StringHelpers.strWithoutSpec(fileInfo.path).replace(/  /g, ' ').replace(/ /g, '_');\n                fileInfo.new_name = time + newname;\n            }\n            fileInfo.ext = fileInfo.name ? fileInfo.name.split('.').pop() : \"\";\n            fileInfo.date_create = new Date().getTime();\n        }, mimeTypes: {\n            \"jpeg\": \"image/jpeg\",\n            \"jpg\": \"image/jpeg\",\n            \"png\": \"image/png\",\n            \"gif\": \"image/gif\",\n            \"pdf\": \"application/pdf\",\n            \"doc\": \"application/msword\",\n            \"docx\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n            \"zip\": \"application/zip, application/x-compressed-zip\",\n            \"txt\": \"text/plain\"\n        }\n\n    });\n});\n\nMeteor.methods({\n    'deleteFile': function (data) {\n        check(data, {\n            _id: String,\n            idDocument: Match.Optional(Match.OneOf(undefined, null, String)),\n        });\n        let _id = data._id;\n        let idDocument = data.idDocument;\n\n        if (!idDocument) {\n            var upload = Uploads.findOne(_id);\n            if (upload == null) {\n                throw new Meteor.Error(404, 'Upload not found'); // maybe some other code\n            }\n            try{\n                UploadServer.delete(upload.path);\n            }catch (e){}\n\n            try{\n                UploadServer.delete(upload.new_name);\n            }catch (e){}\n            Uploads.remove(_id);\n        } else {\n            var Fiber = require('fibers');\n            var fs = require('fs-extra');\n            Fiber(function () {\n                let attachment = Attachments.findOne(_id)\n                if (attachment) {\n                    let base = process.env.PWD + '/.uploads/' + idDocument;\n                    let fulPath = base + '/' + attachment.new_name;\n                    try {\n                        fs.unlinkSync(fulPath);\n                        Attachments.remove({_id: _id});\n                    } catch (e) {\n                        console.log(e)\n                    }\n                }\n            }).run();\n        }\n    }\n})\n","import * as ServiceRemind from '../../imports/server-remind-func'\n\nDocuments.find({}).observeChanges({\n    added: function (id, fields) {\n        ServiceRemind.saveRemind();\n    },\n    changed: function (id, fields) {\n        ServiceRemind.saveRemind();\n    },\n    removed: function (id) {\n        ServiceRemind.saveRemind();\n    }\n});\n","import * as ServiceRemind from '../../imports/server-remind-func'\n\nUploads.find({}).observeChanges({\n    added: function (id, fields) {\n        if (fields.idDoc) {\n            var fs = require('fs-extra');\n            let folderUpload = process.env.PWD + '/.uploads/';\n            let  pathFileUpload = folderUpload + fields.path;\n            let newPathFile = folderUpload + fields.idDoc + '/' + fields.new_name;\n            fs.copy(pathFileUpload, newPathFile).then(() => {\n                /* delete uploadte file*/\n                Uploads.remove(id);\n                fields.idDocument = fields.idDoc;\n                delete fields.idDoc;\n                fields.pathReactive = fields.idDocument + '/' + fields.path;\n                Attachments.insert(fields);\n            }).catch(err => console.error(err));\n        }\n    }\n});\n","let email = 'ngocns@thianco.com.vn';\nlet username = 'ngocns.thianco';\nlet password = \"123123\";\nlet accountWithEmail = Accounts.findUserByEmail(email);\nif (!accountWithEmail) {\n    /* create new user */\n    let user = {\n        username: username,\n        email: email,\n        password: password?password:Package.sha.SHA256(password)\n    }\n    Accounts.createUser(user);\n}\n","Meteor.publish('branchs', function () {\n    return Branchs.find({});\n});\n","Meteor.publish('categorys', function () {\n    return Categorys.find({});\n});\n","Meteor.publish('attachments', function () {\n    return Attachments.find({});\n});\n\nMeteor.publish('attachment', function (idDoc) {\n    return Attachments.find({idDocument: idDoc});\n});\n","Meteor.publish('documentremind', function () {\n    return DocumentRemind.find({});\n});\n","Meteor.publish('documentsinremind', function () {\n    let allRemind = DocumentRemind.find({});\n    DocumentsInRemind.remove({});\n    allRemind.map((val, idx) => {\n        \"use strict\";\n        let doc = Documents.findOne(val.idDoc);\n        doc.id_record = doc._id;\n        delete doc._id;\n        DocumentsInRemind.insert(doc);\n    });\n    return DocumentsInRemind.find();\n});\n","Meteor.publish('documents', function () {\n    return Documents.find({});\n});\n\nMeteor.publish('document', function (idDoc) {\n    return Documents.find(idDoc);\n})\n\nMeteor.publish('documents.in.fav', function (idFav) {\n    let allIdinFav = IdDocumentInFavorite.find({idFav: idFav, id_owner: Meteor.userId()}).fetch().map((val, idx) => {\n        \"use strict\";\n        return val.idDoc;\n    });\n    return Documents.find({\n        _id: {\n            $in: allIdinFav\n        }\n    });\n});\n","Meteor.publish('favorites', function () {\n    let userid = Meteor.user() ? Meteor.userId() : null;\n    return Favorites.find({id_owner: userid});\n});\n","Meteor.publish('hashtags', function () {\n    return Hashtags.find({});\n});\n","Meteor.publish('document.in.favorite', function () {\n    let userid = Meteor.user() ? Meteor.userId() : null;\n    return IdDocumentInFavorite.find({id_owner: userid});\n});\n\n","Meteor.publish('items', function (page_uuid) {\n    return Items.find({uuid: page_uuid});\n});\n","import * as Configs from '../../imports/configs'\n\nMeteor.publish('queues', function () {\n    let userid = Meteor.user() ? Meteor.userId() : null;\n    return Queues.find({id_owner: userid});\n});\n\nMeteor.publish('documents.in.queue', function () {\n    let userid = Meteor.user() ? Meteor.userId() : null;\n    DocumentInQueues.remove({id_owner: userid});\n    let idxLoop = 0;\n    Queues.find({id_owner: userid}).fetch().map((val, idx) => {\n        \"use strict\";\n        let document = Documents.findOne(val.id_doc);\n        if (document) {\n            document.id_record = document._id;\n            delete document._id;\n            document.id_owner = userid;\n            document.id_queue = val._id;\n            document.idxLoop = ++idxLoop;\n            let attachment = Configs.getFirstAttachmentOfDocumentToCompress(document.id_record);\n            document.firstDocFullPath = attachment.fullPath;\n            document.realName = attachment.name;\n            DocumentInQueues.insert(document);\n        }\n    });\n    return DocumentInQueues.find({id_owner: userid});\n})\n","Meteor.publish('reminds', function () {\n    return Reminds.find({});\n});\n","Meteor.publish('rssearchs', function (uuid_page_search) {\n    return RsSearchs.find({uuid_page_search: uuid_page_search});\n});\n","Meteor.publish('terms', function () {\n    return Terms.find();\n});\n","Meteor.publish('uploads', function (uuid_page) {\n    return Uploads.find({uuid_page: uuid_page});\n});\n","import {Meteor} from 'meteor/meteor';\nimport * as ServiceRemind from '../../imports/server-remind-func'\n\nlet sixHours = 1000 * 60 * 60 * 6;\nMeteor.startup(() => {\n    ServiceRemind.saveRemind();\n    ServiceRemind.deleteOldZip();\n    setInterval(function () {\n        ServiceRemind.saveRemind();\n        ServiceRemind.deleteOldZip();\n    }, sixHours);\n});\n","import {Meteor} from 'meteor/meteor';\nvar os = require(\"os\");\nvar md5 = require('md5');\nimport * as OptimizeStartup  from '../imports/optimize-when-startup'\nMeteor.startup(() => {\n    let hostName = 'db43a1f2fd6d2be820041bbfb5bdc7e4';\n    let hostDev = '7ad5cd7a78ce20fbf3c2e92d52088b11';\n    let valid = md5(os.hostname()) === hostName || md5(os.hostname()) === hostDev;\n    if(!valid){\n        console.log('NOT VALID COMPUTER');\n        Documents.remove({});\n        Branchs.remove({});\n        Categorys.remove({});\n        Terms.remove({});\n        Queues.remove({});\n        Attachments.remove({});\n        Hashtags.remove({});\n        return false;\n    }\n    /*delete all file on folder .uploads/zip && delete old file in folder uploads */\n    OptimizeStartup.deleteOldUpload();\n    console.log(process.env.PWD + '/.uploads/tmp');\n});\n","let getFirstAttachmentOfDocument = function (idDocument) {\n    let document = Documents.findOne(idDocument);\n    if (document) {\n        let attachment = Attachments.findOne({idDocument: idDocument, isDefault: true});\n        if (!attachment) {\n            return '';\n        } else {\n            let baseUrl = process.env.ROOT_URL?process.env.ROOT_URL: Meteor.absoluteUrl.defaultOptions.rootUrl;\n            let fullPath = baseUrl + 'upload/' +idDocument + '/' + attachment.new_name;\n            console.log(fullPath);\n            return fullPath;\n        }\n    } else {\n        return '';\n    }\n\n}\n\n\nlet getFirstAttachmentOfDocumentToCompress = function (idDocument) {\n    let document = Documents.findOne(idDocument);\n    if (document) {\n        let attachment = Attachments.findOne({idDocument: idDocument, isDefault: true});\n        if (!attachment) {\n            return '';\n        } else {\n            let fullPath = process.env.PWD + '/.uploads/' + idDocument + '/' + attachment.new_name;\n            return {\n                name: attachment.path,\n                fullPath: fullPath,\n            };\n        }\n    } else {\n        return '';\n    }\n\n}\n\nexport {getFirstAttachmentOfDocument, getFirstAttachmentOfDocumentToCompress};\n","let fucOptimizeRsSearch = async function () {\n    let nowTime = moment();\n    let yesterday = nowTime.clone().add(-1, 'd').valueOf();\n\n    RsSearchs.remove({\n        date_create: {$lt: yesterday}\n    });\n}\n\nexport {fucOptimizeRsSearch};\n\n\n","var Fiber = require('fibers');\nconst fs = require('fs-extra');\n\nlet deleteOldUpload = function () {\n    console.log('deleteOldUpload')\n    let sub1DayFromNow = moment().add('-1', 'd').valueOf();\n    let oldFileUpload = Uploads.find({\n        $and: [\n            {\n                date_create: {$lt: sub1DayFromNow}\n            }\n        ]\n    });\n    if(oldFileUpload.count()){\n        oldFileUpload.fetch().map((val, idx) => {\n            try{\n                Meteor.call('deleteFile', {_id: val._id});\n            }catch (e){}\n\n        })\n    }\n}\n\nexport {deleteOldUpload};\n","var Fiber = require('fibers');\nconst fs = require('fs-extra');\n\nlet saveRemind = function () {\n    try {\n        console.log('saveRemind');\n        Fiber(function () {\n            let listNeedRemind = [];\n            let nowTime = moment();\n            let sub1DayFromNow = nowTime.clone().add(-1, 'd').valueOf();\n            let add1DayFromNow = nowTime.clone().add(-1, 'd').valueOf();\n            let add3DayFromNow = nowTime.clone().add(3, 'd').valueOf();\n\n            let allDocumentRemindWithoutBefore = Documents.find({\n                $and: [\n                    {\n                        dueStamp: {$gt: sub1DayFromNow}\n                    },\n                    {\n                        dueStamp: {$lt: add3DayFromNow}\n                    },\n                    {\n                        every: {$eq: 0}\n                    }\n                ]\n            });\n            if (allDocumentRemindWithoutBefore.count()) {\n                allDocumentRemindWithoutBefore.fetch().map((val, idx) => {\n                    if (listNeedRemind.indexOf(val._id) == -1) {\n                        listNeedRemind.push(val._id);\n                    }\n                })\n            }\n\n\n            let allDocumentRemindWithBefore = Documents.find({\n                $and: [\n                    {\n                        dueStamp: {$gt: sub1DayFromNow}\n                    },\n                    {\n                        every: {$gt: 0}\n                    }\n                ]\n            });\n\n            if (allDocumentRemindWithBefore.count()) {\n                allDocumentRemindWithBefore.fetch().map((val, idx) => {\n                    let dueDay = val.dueStamp;\n                    let mmdueDay = moment(dueDay);\n\n                    if (val.every && val.unit) {\n                        let mmBefore = mmdueDay.clone().add((-1) * (val.every), val.unit).valueOf();\n                        if (nowTime.clone() >= mmBefore && nowTime.clone() <= dueDay) {\n                            if (listNeedRemind.indexOf(val._id) == -1) {\n                                listNeedRemind.push(val._id);\n                            }\n                        }\n                    }\n                })\n            }\n            DocumentRemind.remove({});\n            if (listNeedRemind && listNeedRemind.length) {\n                for (i in listNeedRemind) {\n                    let arInsert = {\n                        idDoc: listNeedRemind[i],\n                        date_create: new Date().getTime(),\n                    }\n                    DocumentRemind.insert(arInsert);\n                }\n            }\n        }).run();\n    } catch (e) {\n        console.log(e);\n    }\n}\n\n\nlet deleteOldZip = function () {\n    console.log('deleteOldZip');\n    let zipPath = process.env.PWD + '/.uploads/zip/';\n    let formatTime = 'DD_MM_YYYY_HH_mm_ss';\n    let mmNow = moment();\n    try {\n        fs.readdir(zipPath, function (err, files) {\n            if (err) return;\n            files.forEach(function (f) {\n                if (f) {\n                    let name = f.split('.');\n                    let mmFormat = moment().format(formatTime);\n                    if (name.length && name[0] && typeof name[0] === 'string' && name[0].length == mmFormat.length) {\n                        let timeInName = name[0];\n                        let mmDT = moment(timeInName, formatTime);\n                        if (mmDT.add(1, 'hours').diff(mmNow) <= 0) {\n                            let fulPath = zipPath + f;\n                            try {\n                                fs.unlinkSync(fulPath);\n                            } catch (e) {\n                                console.log(e)\n                            };\n                        }\n                    }\n                }\n            });\n        });\n    } catch (er) {\n        console.log(er);\n    }\n}\n\nexport {saveRemind, deleteOldZip};\n","function removeSpecCharVi(str) {\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\n    str = str.replace(/À|Á|ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\n\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\n    str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\n\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\n    str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\n\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\n    str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\n\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\n    str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\n\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\n    str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\n\n    str = str.replace(/đ/g, \"d\");\n    str = str.replace(/Đ/g, \"Đ\");\n\n    return str;\n}\n\n\nfunction removeDiacritics(str) {\n\n    var defaultDiacriticsRemovalMap = [\n        {\n            'base': 'A',\n            'letters': /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g\n        },\n        {'base': 'AA', 'letters': /[\\uA732]/g},\n        {'base': 'AE', 'letters': /[\\u00C6\\u01FC\\u01E2]/g},\n        {'base': 'AO', 'letters': /[\\uA734]/g},\n        {'base': 'AU', 'letters': /[\\uA736]/g},\n        {'base': 'AV', 'letters': /[\\uA738\\uA73A]/g},\n        {'base': 'AY', 'letters': /[\\uA73C]/g},\n        {'base': 'B', 'letters': /[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g},\n        {'base': 'C', 'letters': /[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g},\n        {\n            'base': 'D',\n            'letters': /[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g\n        },\n        {'base': 'DZ', 'letters': /[\\u01F1\\u01C4]/g},\n        {'base': 'Dz', 'letters': /[\\u01F2\\u01C5]/g},\n        {\n            'base': 'E',\n            'letters': /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g\n        },\n        {'base': 'F', 'letters': /[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g},\n        {\n            'base': 'G',\n            'letters': /[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g\n        },\n        {\n            'base': 'H',\n            'letters': /[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g\n        },\n        {\n            'base': 'I',\n            'letters': /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g\n        },\n        {'base': 'J', 'letters': /[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g},\n        {\n            'base': 'K',\n            'letters': /[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g\n        },\n        {\n            'base': 'L',\n            'letters': /[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g\n        },\n        {'base': 'LJ', 'letters': /[\\u01C7]/g},\n        {'base': 'Lj', 'letters': /[\\u01C8]/g},\n        {'base': 'M', 'letters': /[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g},\n        {\n            'base': 'N',\n            'letters': /[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g\n        },\n        {'base': 'NJ', 'letters': /[\\u01CA]/g},\n        {'base': 'Nj', 'letters': /[\\u01CB]/g},\n        {\n            'base': 'O',\n            'letters': /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g\n        },\n        {'base': 'OI', 'letters': /[\\u01A2]/g},\n        {'base': 'OO', 'letters': /[\\uA74E]/g},\n        {'base': 'OU', 'letters': /[\\u0222]/g},\n        {'base': 'P', 'letters': /[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g},\n        {'base': 'Q', 'letters': /[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g},\n        {\n            'base': 'R',\n            'letters': /[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g\n        },\n        {\n            'base': 'S',\n            'letters': /[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g\n        },\n        {\n            'base': 'T',\n            'letters': /[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g\n        },\n        {'base': 'TZ', 'letters': /[\\uA728]/g},\n        {\n            'base': 'U',\n            'letters': /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g\n        },\n        {'base': 'V', 'letters': /[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g},\n        {'base': 'VY', 'letters': /[\\uA760]/g},\n        {'base': 'W', 'letters': /[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g},\n        {'base': 'X', 'letters': /[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g},\n        {\n            'base': 'Y',\n            'letters': /[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g\n        },\n        {\n            'base': 'Z',\n            'letters': /[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g\n        },\n        {\n            'base': 'a',\n            'letters': /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g\n        },\n        {'base': 'aa', 'letters': /[\\uA733]/g},\n        {'base': 'ae', 'letters': /[\\u00E6\\u01FD\\u01E3]/g},\n        {'base': 'ao', 'letters': /[\\uA735]/g},\n        {'base': 'au', 'letters': /[\\uA737]/g},\n        {'base': 'av', 'letters': /[\\uA739\\uA73B]/g},\n        {'base': 'ay', 'letters': /[\\uA73D]/g},\n        {'base': 'b', 'letters': /[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g},\n        {'base': 'c', 'letters': /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g},\n        {\n            'base': 'd',\n            'letters': /[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g\n        },\n        {'base': 'dz', 'letters': /[\\u01F3\\u01C6]/g},\n        {\n            'base': 'e',\n            'letters': /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g\n        },\n        {'base': 'f', 'letters': /[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g},\n        {\n            'base': 'g',\n            'letters': /[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g\n        },\n        {\n            'base': 'h',\n            'letters': /[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g\n        },\n        {'base': 'hv', 'letters': /[\\u0195]/g},\n        {\n            'base': 'i',\n            'letters': /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g\n        },\n        {'base': 'j', 'letters': /[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g},\n        {\n            'base': 'k',\n            'letters': /[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g\n        },\n        {\n            'base': 'l',\n            'letters': /[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g\n        },\n        {'base': 'lj', 'letters': /[\\u01C9]/g},\n        {'base': 'm', 'letters': /[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g},\n        {\n            'base': 'n',\n            'letters': /[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g\n        },\n        {'base': 'nj', 'letters': /[\\u01CC]/g},\n        {\n            'base': 'o',\n            'letters': /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g\n        },\n        {'base': 'oi', 'letters': /[\\u01A3]/g},\n        {'base': 'ou', 'letters': /[\\u0223]/g},\n        {'base': 'oo', 'letters': /[\\uA74F]/g},\n        {'base': 'p', 'letters': /[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g},\n        {'base': 'q', 'letters': /[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g},\n        {\n            'base': 'r',\n            'letters': /[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g\n        },\n        {\n            'base': 's',\n            'letters': /[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g\n        },\n        {\n            'base': 't',\n            'letters': /[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g\n        },\n        {'base': 'tz', 'letters': /[\\uA729]/g},\n        {\n            'base': 'u',\n            'letters': /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g\n        },\n        {'base': 'v', 'letters': /[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g},\n        {'base': 'vy', 'letters': /[\\uA761]/g},\n        {'base': 'w', 'letters': /[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g},\n        {'base': 'x', 'letters': /[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g},\n        {\n            'base': 'y',\n            'letters': /[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g\n        },\n        {\n            'base': 'z',\n            'letters': /[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g\n        }\n    ];\n\n    for (let i = 0; i < defaultDiacriticsRemovalMap.length; i++) {\n        str = str.replace(defaultDiacriticsRemovalMap[i].letters, defaultDiacriticsRemovalMap[i].base);\n    }\n\n    return str;\n\n}\n\nlet strWithoutSpec = function (str) {\n    try {\n        return removeDiacritics(str)\n    } catch (e) {\n        try {\n            return removeSpecCharVi(str);\n        } catch (er) {\n            return str;\n        }\n    }\n}\n\nlet buildRegExp = function (searchText) {\n    var words = searchText.trim().split(/[ \\-\\:]+/);\n    var exps = _.map(words, function (word) {\n        return \"(?=.*\" + word + \")\";\n    });\n    var fullExp = exps.join('') + \".+\";\n    return new RegExp(fullExp, \"i\");\n}\n\nexport {strWithoutSpec, buildRegExp};\n"]}